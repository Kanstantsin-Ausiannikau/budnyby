IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsRolePremissionSettings' and column_name = 'CustomFields')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] ADD CustomFields BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsRolePremissionSettings_CustomFields DEFAULT(0) NOT NULL
END
GO

IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsUserPremissionSettings' and column_name = 'CustomFields')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] ADD CustomFields BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsUserPremissionSettings_CustomFields DEFAULT(0) NOT NULL
END
GO

/****** Object:  Table {databaseOwner}[{objectQualifier}EasyDNNfielsType]    Script Date: 07/11/2013 14:34:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfielsType]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNfielsType](
	[ControlTypeID] [int] NOT NULL,
	[Name] [nvarchar](150) NOT NULL,
	CONSTRAINT [PK_{objectQualifier}EasyDNNfielsType] PRIMARY KEY CLUSTERED ( [ControlTypeID] ASC ) WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
/****** Object:  Table {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrencySettings]    Script Date: 07/11/2013 14:34:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsCurrencySettings]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrencySettings](
	[ACodeBase] [nvarchar](5) NOT NULL,
	[PortalID] [int] NOT NULL,
	[ServiceUrl] [nvarchar](300) NULL,
	[UpdateRate] [datetime] NULL,
	[UpdateSource] [bit] NOT NULL,
	CONSTRAINT [PK_{objectQualifier}EasyDNNfieldsCurrencySettings] PRIMARY KEY CLUSTERED ( [ACodeBase] ASC, [PortalID] ASC )WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
/****** Object:  Table {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplate]    Script Date: 07/11/2013 14:34:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsTemplate]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplate](
	[FieldsTemplateID] [int] IDENTITY(1,1) NOT NULL,
	[PortalID] [int] NOT NULL,
	[Name] [nvarchar](250) NOT NULL,
	[Description] [nvarchar](1000) NOT NULL,
	[CssURL] [nvarchar](500) NOT NULL,
	[HTMLURL] [nvarchar](500) NOT NULL,
	[Position] [int] NOT NULL
	CONSTRAINT [PK_{objectQualifier}EasyDNNfieldsTemplate] PRIMARY KEY CLUSTERED  ( [FieldsTemplateID] ASC )WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
/****** Object:  Table {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency]    Script Date: 07/11/2013 14:34:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency](
	[ACode] [nvarchar](5) NOT NULL,
	[NCode] [int] NOT NULL,
	[Currency] [nvarchar](250) NOT NULL,
	CONSTRAINT [PK_{objectQualifier}EasyDNNfieldsCurrency] PRIMARY KEY CLUSTERED  ([ACode] ASC) WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
/****** Object:  Table {databaseOwner}[{objectQualifier}EasyDNNfields]    Script Date: 07/11/2013 14:34:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfields]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNfields](
	[CustomFieldID] [int] IDENTITY(1,1) NOT NULL,
	[ControlTypeID] [int] NOT NULL,
	[CFParentID] [int] NULL,
	[IsParent] [bit] NOT NULL,
	[Name] [nvarchar](300) NOT NULL,
	[PortalID] [int] NOT NULL,
	[Token] [nvarchar](250) NOT NULL,
	[DefText] [nvarchar](300) NULL,
	[DefRichText] [nvarchar](max) NULL,
	[DefDecimal] [nvarchar](250) NULL,
	[DefInteger] [int] NULL,
	[DefBool] [bit] NOT NULL,
	[ShowLabel] [bit] NOT NULL,
	[LabelValue] [nvarchar](500) NOT NULL,
	[LabelHelp] [nvarchar](500) NOT NULL,
	[IconURL] [nvarchar](350) NULL,
	[IsPublished] [bit] NOT NULL,
	[IsHidden] [bit] NOT NULL,
	[IsSearchable] [bit] NOT NULL,
	[IsRequired] [bit] NOT NULL,
	[ValidationType] [int] NOT NULL,
	[RegularExpression] [nvarchar](150) NOT NULL,
	[ValidationErrorMsg] [nvarchar](300) NULL,
	[ValidationFocusOnError] [bit] NULL,
	[DefDtime] [datetime] NULL,
	[FromValue] [int] NULL,
	[ToValue] [int] NULL,
	[ACode] [nvarchar](5) NULL,
	[RangeSource] [bit] NULL,
	[FromLabel] [nvarchar](250) NULL,
	[ToLabel] [nvarchar](250) NULL,
	[DisplayFormat] [nvarchar](10) NULL,
	[CommonDataID] [int] NULL,
	CONSTRAINT [PK_{objectQualifier}EasyDNNfields] PRIMARY KEY CLUSTERED ( [CustomFieldID] ASC ) WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF),
	CONSTRAINT [IX_{objectQualifier}EasyDNNfields_PortalID_Token] UNIQUE NONCLUSTERED ([PortalID] ASC, [Token] ASC)WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
/****** Object:  Table {databaseOwner}[{objectQualifier}EasyDNNfieldsValues]    Script Date: 07/11/2013 14:34:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsValues]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsValues](
	[CustomFieldID] [int] NOT NULL,
	[ArticleID] [int] NOT NULL,
	[RText] [nvarchar](max) NULL,
	[Decimal] [decimal](18, 4) NULL,
	[Int] [int] NULL,
	[Text] [nvarchar](300) NULL,
	[Bit] [bit] NULL,
	[DateTime] [datetime] NULL,
	CONSTRAINT [PK_{objectQualifier}EasyDNNfieldsValues] PRIMARY KEY CLUSTERED ( [CustomFieldID] ASC, [ArticleID] ASC )WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
/****** Object:  Table {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems]    Script Date: 07/11/2013 14:34:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems](
	[FieldsTemplateID] [int] NOT NULL,
	[CustomFieldID] [int] NOT NULL,
	[Position] [int] NOT NULL,
 CONSTRAINT [PK_{objectQualifier}EasyDNNfieldsTemplateItems] PRIMARY KEY CLUSTERED ( [FieldsTemplateID] ASC, [CustomFieldID] ASC )WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
/****** Object:  Table {databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeRate]    Script Date: 07/11/2013 14:34:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeRate]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeRate](
	[ACodeBase] [nvarchar](5) NOT NULL,
	[PortalID] [int] NOT NULL,
	[ACode] [nvarchar](5) NOT NULL,
	[Unit] [int] NOT NULL,
	[ExchangeRate] [decimal](19, 6) NOT NULL,
	[DateTime] [datetime] NOT NULL,
	[Position] [int] NOT NULL,
	[DisplayOnReport] [bit] NOT NULL,
	[DisplayFormat] [nvarchar](10) NULL,
 CONSTRAINT [PK_{objectQualifier}EasyDNNfieldsCurrencyRate] PRIMARY KEY CLUSTERED ( [ACodeBase] ASC, [PortalID] ASC,[ACode] ASC )WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
/****** Object:  Table {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements]    Script Date: 07/11/2013 14:34:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements](
	[FieldElementID] [int] IDENTITY(1,1) NOT NULL,
	[CustomFieldID] [int] NOT NULL,
	[FEParentID] [int] NULL,
	[Text] [nvarchar](300) NOT NULL,
	[Position] [int] NOT NULL,
	[DefSelected] [bit] NOT NULL,
	CONSTRAINT [PK_{objectQualifier}EasyDNNfieldsMultiElements] PRIMARY KEY CLUSTERED ( [FieldElementID] ASC )WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
 )
END
GO
/****** Object:  Trigger [EasyDNNnewsTCurrencyBaseCorrectOnUpdate]    Script Date: 07/11/2013 14:34:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsTCurrencyBaseCorrectOnUpdate]'))
EXEC dbo.sp_executesql @statement = N'
CREATE TRIGGER {databaseOwner}[{objectQualifier}EasyDNNnewsTCurrencyBaseCorrectOnUpdate] ON {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency]
	AFTER UPDATE
AS
DECLARE @CodeNew AS nvarchar(5);
DECLARE @CodeOld AS nvarchar(5);
DECLARE @CodeNewExists AS nvarchar(5);
BEGIN
	SET NOCOUNT ON;
	SET @CodeNew = (SELECT [ACode] FROM inserted)
	SET @CodeOld = (SELECT [ACode] FROM deleted)
	SET @CodeNewExists = (SELECT [ACode] FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] WHERE [ACode] = @CodeNew)
	IF(@CodeNewExists IS NOT NULL)
	BEGIN
		IF(@CodeNew <> @CodeOld)
		BEGIN
			UPDATE {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrencySettings] SET [ACodeBase] = @CodeNew WHERE [ACodeBase] = @CodeOld
		END
	END
END;
'
GO
/****** Object:  Trigger [EasyDNNnewsTCurrencyBaseCorrectOnDelete]    Script Date: 07/11/2013 14:34:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsTCurrencyBaseCorrectOnDelete]'))
EXEC dbo.sp_executesql @statement = N'
CREATE TRIGGER {databaseOwner}[{objectQualifier}EasyDNNnewsTCurrencyBaseCorrectOnDelete] ON {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency]
	AFTER DELETE
AS
DECLARE @CodeOld AS nvarchar(5);
DECLARE @CodeBase AS nvarchar(5);
BEGIN
	SET NOCOUNT ON;
	SET @CodeOld = (SELECT [ACode] FROM deleted)
	SET @CodeBase = (SELECT [ACodeBase] FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrencySettings] WHERE [ACodeBase] = @CodeOld)
	IF(@CodeBase IS NOT NULL)
	BEGIN
		DELETE FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrencySettings] WHERE [ACodeBase] = @CodeOld
	END
END;
'
GO
/****** Object:  Table {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected]    Script Date: 07/11/2013 14:34:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected](
	[FieldElementID] [int] NOT NULL,
	[CustomFieldID] [int] NOT NULL,
	[ArticleID] [int] NOT NULL,
	CONSTRAINT [PK_{objectQualifier}EasyDNNfieldsMultiSelected] PRIMARY KEY CLUSTERED ( [FieldElementID] ASC, [CustomFieldID] ASC, [ArticleID] ASC )WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
/****** Object:  Table {databaseOwner}[{objectQualifier}EasyDNNfieldsLocalesCurrencyItems]    Script Date: 07/11/2013 14:34:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsLocalesCurrencyItems]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsLocalesCurrencyItems](
	[ACodeBase] [nvarchar](5) NOT NULL,
	[ACode] [nvarchar](5) NOT NULL,
	[PortalID] [int] NOT NULL,
	[LocaleKey] [nvarchar](10) NOT NULL,
	[LocaleName] [nvarchar](250) NOT NULL,
	[DisplayFormat] [nvarchar](10) NOT NULL,
	CONSTRAINT [PK_{objectQualifier}EasyDNNfieldsLocalesCurrencyItems] PRIMARY KEY CLUSTERED ( [LocaleKey] ASC, [PortalID] ASC, [ACode] ASC )WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
/****** Object:  Default [DF_EasyDNNfieldsCurrencySettings_UpdateSource]    Script Date: 07/11/2013 14:34:56 ******/
IF NOT EXISTS (SELECT * FROM sys.default_constraints WHERE object_id = OBJECT_ID(N'[DF_{objectQualifier}EasyDNNfieldsCurrencySettings_UpdateSource]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsCurrencySettings]'))
Begin
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[DF_{objectQualifier}EasyDNNfieldsCurrencySettings_UpdateSource]') AND type = 'D')
BEGIN
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrencySettings] ADD CONSTRAINT [DF_{objectQualifier}EasyDNNfieldsCurrencySettings_UpdateSource]  DEFAULT ((0)) FOR [UpdateSource]
END


End
GO
/****** Object:  ForeignKey [FK_{objectQualifier}EasyDNNfields_EasyDNNfields]    Script Date: 07/11/2013 14:34:56 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNfields_EasyDNNfields]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfields]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfields]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNfields_EasyDNNfields] FOREIGN KEY([CFParentID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNfields] ([CustomFieldID])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNfields_EasyDNNfields]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfields]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfields] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNfields_EasyDNNfields]
GO
/****** Object:  ForeignKey [FK_{objectQualifier}EasyDNNfields_EasyDNNfielsType]    Script Date: 07/11/2013 14:34:56 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNfields_EasyDNNfielsType]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfields]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfields]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNfields_EasyDNNfielsType] FOREIGN KEY([ControlTypeID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNfielsType] ([ControlTypeID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNfields_EasyDNNfielsType]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfields]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfields] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNfields_EasyDNNfielsType]
GO
/****** Object:  ForeignKey [FK_{objectQualifier}EasyDNNfieldsExchangeRate_EasyDNNfieldsCurrency]    Script Date: 07/11/2013 14:34:56 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNfieldsExchangeRate_EasyDNNfieldsCurrency]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeRate]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeRate]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNfieldsExchangeRate_EasyDNNfieldsCurrency] FOREIGN KEY([ACode])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode]) ON UPDATE CASCADE ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNfieldsExchangeRate_EasyDNNfieldsCurrency]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeRate]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeRate] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNfieldsExchangeRate_EasyDNNfieldsCurrency]
GO
/****** Object:  ForeignKey [FK_{objectQualifier}EasyDNNfieldsExchangeRate_EasyDNNfieldsCurrencySettings]    Script Date: 07/11/2013 14:34:56 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNfieldsExchangeRate_EasyDNNfieldsCurrencySettings]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeRate]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeRate]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNfieldsExchangeRate_EasyDNNfieldsCurrencySettings] FOREIGN KEY([ACodeBase], [PortalID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrencySettings] ([ACodeBase], [PortalID]) ON UPDATE CASCADE ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNfieldsExchangeRate_EasyDNNfieldsCurrencySettings]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeRate]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeRate] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNfieldsExchangeRate_EasyDNNfieldsCurrencySettings]
GO
/****** Object:  ForeignKey [FK_{objectQualifier}EasyDNNfieldsLocalesCurrencyItems_EasyDNNfieldsExchangeRate]    Script Date: 07/11/2013 14:34:56 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNfieldsLocalesCurrencyItems_EasyDNNfieldsExchangeRate]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsLocalesCurrencyItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsLocalesCurrencyItems]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNfieldsLocalesCurrencyItems_EasyDNNfieldsExchangeRate] FOREIGN KEY([ACodeBase], [PortalID], [ACode])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeRate] ([ACodeBase], [PortalID], [ACode]) ON UPDATE CASCADE ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNfieldsLocalesCurrencyItems_EasyDNNfieldsExchangeRate]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsLocalesCurrencyItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsLocalesCurrencyItems] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNfieldsLocalesCurrencyItems_EasyDNNfieldsExchangeRate]
GO
/****** Object:  ForeignKey [FK_{objectQualifier}EasyDNNfieldsMultiElements_EasyDNNfields]    Script Date: 07/11/2013 14:34:56 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNfieldsMultiElements_EasyDNNfields]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNfieldsMultiElements_EasyDNNfields] FOREIGN KEY([CustomFieldID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNfields] ([CustomFieldID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNfieldsMultiElements_EasyDNNfields]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNfieldsMultiElements_EasyDNNfields]
GO
/****** Object:  ForeignKey [FK_{objectQualifier}EasyDNNfieldsMultiElements_EasyDNNfieldsMultiElements]    Script Date: 07/11/2013 14:34:56 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNfieldsMultiElements_EasyDNNfieldsMultiElements]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNfieldsMultiElements_EasyDNNfieldsMultiElements] FOREIGN KEY([FEParentID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements] ([FieldElementID])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNfieldsMultiElements_EasyDNNfieldsMultiElements]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNfieldsMultiElements_EasyDNNfieldsMultiElements]
GO
/****** Object:  ForeignKey [FK_{objectQualifier}EasyDNNfieldsMultiSelected_EasyDNNfieldsMultiElements1]    Script Date: 07/11/2013 14:34:56 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNfieldsMultiSelected_EasyDNNfieldsMultiElements1]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNfieldsMultiSelected_EasyDNNfieldsMultiElements1] FOREIGN KEY([FieldElementID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements] ([FieldElementID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNfieldsMultiSelected_EasyDNNfieldsMultiElements1]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNfieldsMultiSelected_EasyDNNfieldsMultiElements1]
GO
/****** Object:  ForeignKey [FK_{objectQualifier}EasyDNNfieldsMultiSelected_EasyDNNNews]    Script Date: 07/11/2013 14:34:56 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNfieldsMultiSelected_EasyDNNNews]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNfieldsMultiSelected_EasyDNNNews] FOREIGN KEY([ArticleID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNNews] ([ArticleID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNfieldsMultiSelected_EasyDNNNews]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiSelected] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNfieldsMultiSelected_EasyDNNNews]
GO
/****** Object:  ForeignKey [FK_{objectQualifier}EasyDNNfieldsTemplateItems_EasyDNNfields]    Script Date: 07/11/2013 14:34:56 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNfieldsTemplateItems_EasyDNNfields]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNfieldsTemplateItems_EasyDNNfields] FOREIGN KEY([CustomFieldID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNfields] ([CustomFieldID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNfieldsTemplateItems_EasyDNNfields]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNfieldsTemplateItems_EasyDNNfields]
GO
/****** Object:  ForeignKey [FK_{objectQualifier}EasyDNNfieldsTemplateItems_EasyDNNfieldsTemplate]    Script Date: 07/11/2013 14:34:56 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNfieldsTemplateItems_EasyDNNfieldsTemplate]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNfieldsTemplateItems_EasyDNNfieldsTemplate] FOREIGN KEY([FieldsTemplateID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplate] ([FieldsTemplateID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNfieldsTemplateItems_EasyDNNfieldsTemplate]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNfieldsTemplateItems_EasyDNNfieldsTemplate]
GO
/****** Object:  ForeignKey [FK_{objectQualifier}EasyDNNfieldsValues_EasyDNNfields]    Script Date: 07/11/2013 14:34:56 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNfieldsValues_EasyDNNfields]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsValues]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsValues]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNfieldsValues_EasyDNNfields] FOREIGN KEY([CustomFieldID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNfields] ([CustomFieldID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNfieldsValues_EasyDNNfields]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsValues]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNfieldsValues_EasyDNNfields]
GO
/****** Object:  ForeignKey [FK_{objectQualifier}EasyDNNfieldsValues_EasyDNNNews]    Script Date: 07/11/2013 14:34:56 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNfieldsValues_EasyDNNNews]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsValues]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsValues]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNfieldsValues_EasyDNNNews] FOREIGN KEY([ArticleID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNNews] ([ArticleID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNfieldsValues_EasyDNNNews]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsValues]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNfieldsValues_EasyDNNNews]
GO
IF NOT EXISTS (SELECT ControlTypeID FROM {databaseOwner}[{objectQualifier}EasyDNNfielsType] WHERE ControlTypeID = 1)
BEGIN
INSERT {databaseOwner}[{objectQualifier}EasyDNNfielsType] ([ControlTypeID], [Name]) VALUES (1, N'Text')
END
GO
IF NOT EXISTS (SELECT ControlTypeID FROM {databaseOwner}[{objectQualifier}EasyDNNfielsType] WHERE ControlTypeID = 2)
BEGIN
INSERT {databaseOwner}[{objectQualifier}EasyDNNfielsType] ([ControlTypeID], [Name]) VALUES (2, N'Rich Text (HTML)')
END
GO
IF NOT EXISTS (SELECT ControlTypeID FROM {databaseOwner}[{objectQualifier}EasyDNNfielsType] WHERE ControlTypeID = 3)
BEGIN
INSERT {databaseOwner}[{objectQualifier}EasyDNNfielsType] ([ControlTypeID], [Name]) VALUES (3, N'Integer')
END
GO
IF NOT EXISTS (SELECT ControlTypeID FROM {databaseOwner}[{objectQualifier}EasyDNNfielsType] WHERE ControlTypeID = 4)
BEGIN
INSERT {databaseOwner}[{objectQualifier}EasyDNNfielsType] ([ControlTypeID], [Name]) VALUES (4, N'Decimal')
END
GO
IF NOT EXISTS (SELECT ControlTypeID FROM {databaseOwner}[{objectQualifier}EasyDNNfielsType] WHERE ControlTypeID = 5)
BEGIN
INSERT {databaseOwner}[{objectQualifier}EasyDNNfielsType] ([ControlTypeID], [Name]) VALUES (5, N'Money')
END
GO
IF NOT EXISTS (SELECT ControlTypeID FROM {databaseOwner}[{objectQualifier}EasyDNNfielsType] WHERE ControlTypeID = 6)
BEGIN
INSERT {databaseOwner}[{objectQualifier}EasyDNNfielsType] ([ControlTypeID], [Name]) VALUES (6, N'Email')
END
GO
IF NOT EXISTS (SELECT ControlTypeID FROM {databaseOwner}[{objectQualifier}EasyDNNfielsType] WHERE ControlTypeID = 7)
BEGIN
INSERT {databaseOwner}[{objectQualifier}EasyDNNfielsType] ([ControlTypeID], [Name]) VALUES (7, N'Color picker')
END
GO
IF NOT EXISTS (SELECT ControlTypeID FROM {databaseOwner}[{objectQualifier}EasyDNNfielsType] WHERE ControlTypeID = 8)
BEGIN
INSERT {databaseOwner}[{objectQualifier}EasyDNNfielsType] ([ControlTypeID], [Name]) VALUES (8, N'Password')
END
GO
IF NOT EXISTS (SELECT ControlTypeID FROM {databaseOwner}[{objectQualifier}EasyDNNfielsType] WHERE ControlTypeID = 9)
BEGIN
INSERT {databaseOwner}[{objectQualifier}EasyDNNfielsType] ([ControlTypeID], [Name]) VALUES (9, N'Date time picker')
END
GO
IF NOT EXISTS (SELECT ControlTypeID FROM {databaseOwner}[{objectQualifier}EasyDNNfielsType] WHERE ControlTypeID = 15)
BEGIN
INSERT {databaseOwner}[{objectQualifier}EasyDNNfielsType] ([ControlTypeID], [Name]) VALUES (15, N'CheckBox')
END
GO
IF NOT EXISTS (SELECT ControlTypeID FROM {databaseOwner}[{objectQualifier}EasyDNNfielsType] WHERE ControlTypeID = 20)
BEGIN
INSERT {databaseOwner}[{objectQualifier}EasyDNNfielsType] ([ControlTypeID], [Name]) VALUES (20, N'DropDownList')
END
GO
IF NOT EXISTS (SELECT ControlTypeID FROM {databaseOwner}[{objectQualifier}EasyDNNfielsType] WHERE ControlTypeID = 21)
BEGIN
INSERT {databaseOwner}[{objectQualifier}EasyDNNfielsType] ([ControlTypeID], [Name]) VALUES (21, N'RadioButtonList')
END
GO
IF NOT EXISTS (SELECT ControlTypeID FROM {databaseOwner}[{objectQualifier}EasyDNNfielsType] WHERE ControlTypeID = 22)
BEGIN
INSERT {databaseOwner}[{objectQualifier}EasyDNNfielsType] ([ControlTypeID], [Name]) VALUES (22, N'ListBox')
END
GO
IF NOT EXISTS (SELECT ControlTypeID FROM {databaseOwner}[{objectQualifier}EasyDNNfielsType] WHERE ControlTypeID = 23)
BEGIN
INSERT {databaseOwner}[{objectQualifier}EasyDNNfielsType] ([ControlTypeID], [Name]) VALUES (23, N'CheckBoxList')
END
GO
IF NOT EXISTS (SELECT ControlTypeID FROM {databaseOwner}[{objectQualifier}EasyDNNfielsType] WHERE ControlTypeID = 100)
BEGIN
INSERT {databaseOwner}[{objectQualifier}EasyDNNfielsType] ([ControlTypeID], [Name]) VALUES (100, N'CommonPortalItems')
END
GO

IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNews' and column_name = 'CFGroupeID')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNews] ADD CFGroupeID int CONSTRAINT DF_{objectQualifier}EasyDNNNews_CFGroupeID NULL
END
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency]') AND type in (N'U'))
BEGIN
	IF NOT EXISTS (SELECT * FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] WHERE ACode = 'AFN' )
	BEGIN TRY
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'AFN', 971, N'Afghani')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'ALL', 8, N'Lek')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'AMD', 51, N'Armenian Dram')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'ANG', 532, N'Netherlands Antillean Guilder')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'AOA', 973, N'Kwanza')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'ARS', 32, N'Argentine Peso')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'AUD', 36, N'Australian Dollar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'AWG', 533, N'Aruban Florin')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'AZN', 944, N'Azerbaijanian Manat')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'BAM', 977, N'Convertible Mark')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'BBD', 52, N'Barbados Dollar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'BDT', 50, N'Taka')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'BGN', 975, N'Bulgarian Lev')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'BHD', 48, N'Bahraini Dinar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'BIF', 108, N'Burundi Franc')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'BMD', 60, N'Bermudian Dollar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'BND', 96, N'Brunei Dollar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'BOB', 68, N'Boliviano')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'BOV', 984, N'Mvdol')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'BRL', 986, N'Brazilian Real')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'BSD', 44, N'Bahamian Dollar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'BTN', 64, N'Ngultrum')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'BWP', 72, N'Pula')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'BYR', 974, N'Belarussian Ruble')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'BZD', 84, N'Belize Dollar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'CAD', 124, N'Canadian Dollar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'CDF', 976, N'Congolese Franc')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'CHE', 947, N'WIR Euro')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'CHF', 756, N'Swiss Franc')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'CHW', 948, N'WIR Franc')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'CLF', 990, N'Unidades de fomento')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'CLP', 152, N'Chilean Peso')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'CNY', 156, N'Yuan Renminbi')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'COP', 170, N'Colombian Peso')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'COU', 970, N'Unidad de Valor Real')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'CRC', 188, N'Costa Rican Colon')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'CUC', 931, N'Peso Convertible')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'CUP', 192, N'Cuban Peso')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'CVE', 132, N'Cape Verde Escudo')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'CZK', 203, N'Czech Koruna')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'DJF', 262, N'Djibouti Franc')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'DKK', 208, N'Danish Krone')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'DOP', 214, N'Dominican Peso')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'DZD', 12, N'Algerian Dinar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'EGP', 818, N'Egyptian Pound')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'ERN', 232, N'Nakfa')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'ETB', 230, N'Ethiopian Birr')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'EUR', 978, N'Euro')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'FJD', 242, N'Fiji Dollar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'FKP', 238, N'Falkland Islands Pound')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'GBP', 826, N'Pound Sterling')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'GEL', 981, N'Lari')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'GHS', 936, N'Ghana Cedi')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'GIP', 292, N'Gibraltar Pound')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'GMD', 270, N'Dalasi')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'GNF', 324, N'Guinea Franc')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'GTQ', 320, N'Quetzal')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'GYD', 328, N'Guyana Dollar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'HKD', 344, N'Hong Kong Dollar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'HNL', 340, N'Lempira')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'HRK', 191, N'Croatian Kuna')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'HTG', 332, N'Gourde')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'HUF', 348, N'Forint')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'IDR', 360, N'Rupiah')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'ILS', 376, N'New Israeli Sheqel')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'INR', 356, N'Indian Rupee')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'IQD', 368, N'Iraqi Dinar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'IRR', 364, N'Iranian Rial')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'ISK', 352, N'Iceland Krona')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'JMD', 388, N'Jamaican Dollar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'JOD', 400, N'Jordanian Dinar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'JPY', 392, N'Yen')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'KES', 404, N'Kenyan Shilling')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'KGS', 417, N'Som')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'KHR', 116, N'Riel')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'KMF', 174, N'Comoro Franc')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'KPW', 408, N'North Korean Won')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'KRW', 410, N'Won')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'KWD', 414, N'Kuwaiti Dinar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'KYD', 136, N'Cayman Islands Dollar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'KZT', 398, N'Tenge')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'LAK', 418, N'Kip')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'LBP', 422, N'Lebanese Pound')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'LKR', 144, N'Sri Lanka Rupee')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'LRD', 430, N'Liberian Dollar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'LSL', 426, N'Loti')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'LTL', 440, N'Lithuanian Litas')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'LVL', 428, N'Latvian Lats')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'LYD', 434, N'Libyan Dinar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'MAD', 504, N'Moroccan Dirham')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'MDL', 498, N'Moldovan Leu')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'MGA', 969, N'Malagasy Ariary')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'MKD', 807, N'Denar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'MMK', 104, N'Kyat')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'MNT', 496, N'Tugrik')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'MOP', 446, N'Pataca')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'MRO', 478, N'Ouguiya')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'MUR', 480, N'Mauritius Rupee')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'MVR', 462, N'Rufiyaa')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'MWK', 454, N'Kwacha')

		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'MXN', 484, N'Mexican Peso')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'MXV', 979, N'Mexican Unidad de Inversion (UDI)')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'MYR', 458, N'Malaysian Ringgit')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'MZN', 943, N'Mozambique Metical')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'NAD', 516, N'Namibia Dollar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'NGN', 566, N'Naira')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'NIO', 558, N'Cordoba Oro')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'NOK', 578, N'Norwegian Krone')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'NPR', 524, N'Nepalese Rupee')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'NZD', 554, N'New Zealand Dollar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'OMR', 512, N'Rial Omani')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'PAB', 590, N'Balboa')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'PEN', 604, N'Nuevo Sol')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'PGK', 598, N'Kina')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'PHP', 608, N'Philippine Peso')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'PKR', 586, N'Pakistan Rupee')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'PLN', 985, N'Zloty')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'PYG', 600, N'Guarani')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'QAR', 634, N'Qatari Rial')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'RON', 946, N'New Romanian Leu')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'RSD', 941, N'Serbian Dinar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'RUB', 643, N'Russian Ruble')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'RWF', 646, N'Rwanda Franc')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'SAR', 682, N'Saudi Riyal')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'SBD', 90, N'Solomon Islands Dollar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'SCR', 690, N'Seychelles Rupee')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'SDG', 938, N'Sudanese Pound')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'SEK', 752, N'Swedish Krona')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'SGD', 702, N'Singapore Dollar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'SHP', 654, N'Saint Helena Pound')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'SLL', 694, N'Leone')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'SOS', 706, N'Somali Shilling')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'SRD', 968, N'Surinam Dollar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'SSP', 728, N'South Sudanese Pound')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'STD', 678, N'Dobra')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'SVC', 222, N'El Salvador Colon')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'SYP', 760, N'Syrian Pound')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'SZL', 748, N'Lilangeni')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'THB', 764, N'Baht')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'TJS', 972, N'Somoni')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'TMT', 934, N'Turkmenistan New Manat')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'TND', 788, N'Tunisian Dinar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'TOP', 776, N'Pa’anga')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'TRY', 949, N'Turkish Lira')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'TTD', 780, N'Trinidad and Tobago Dollar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'TWD', 901, N'New Taiwan Dollar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'TZS', 834, N'Tanzanian Shilling')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'UAH', 980, N'Hryvnia')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'UGX', 800, N'Uganda Shilling')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'USD', 840, N'US Dollar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'USN', 997, N'US Dollar (Next day)')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'USS', 998, N'US Dollar (Same day)')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'UYI', 940, N'Uruguay Peso en Unidades Indexadas (URUIURUI)')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'UYU', 858, N'Peso Uruguayo')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'UZS', 860, N'Uzbekistan Sum')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'VEF', 937, N'Bolivar Fuerte')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'VND', 704, N'Dong')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'VUV', 548, N'Vatu')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'WST', 882, N'Tala')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'XAF', 950, N'CFA Franc BEAC')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'XAG', 961, N'Silver')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'XAU', 959, N'Gold')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'XBA', 955, N'Bond Markets Unit European Composite Unit (EURCO)')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'XBB', 956, N'Bond Markets Unit European Monetary Unit (E.M.U.-6)')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'XBC', 957, N'Bond Markets Unit European Unit of Account 9 (E.U.A.-9)')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'XBD', 958, N'Bond Markets Unit European Unit of Account 17 (E.U.A.-17)')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'XCD', 951, N'East Caribbean Dollar')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'XDR', 960, N'SDR (Special Drawing Right)')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'XFU', 0, N'UIC-Franc')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'XOF', 952, N'CFA Franc BCEAO')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'XPD', 964, N'Palladium')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'XPF', 953, N'CFP Franc')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'XPT', 962, N'Platinum')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'XSU', 994, N'Sucre')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'XTS', 963, N'Codes specifically reserved for testing purposes')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'XUA', 965, N'ADB Unit of Account')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'XXX', 999, N'The codes assigned for transactions where no currency is involved')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'YER', 886, N'Yemeni Rial')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'ZAR', 710, N'Rand')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'ZMK', 894, N'Zambian Kwacha')
		INSERT {databaseOwner}[{objectQualifier}EasyDNNfieldsCurrency] ([ACode], [NCode], [Currency]) VALUES (N'ZWL', 932, N'Zimbabwe Dollar')
	END TRY
	BEGIN CATCH
	END CATCH
END
GO

/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNfieldGetMultiControlsElementsByParent]    Script Date: 07/11/2013 16:50:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldGetMultiControlsElementsByParent]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNfieldGetMultiControlsElementsByParent]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNfieldsAddCustomFieldToTemplate]    Script Date: 07/11/2013 16:50:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsAddCustomFieldToTemplate]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNfieldsAddCustomFieldToTemplate]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNfieldsAddToExchangeRateList]    Script Date: 07/11/2013 16:50:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsAddToExchangeRateList]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNfieldsAddToExchangeRateList]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNfieldsIUElementsList]    Script Date: 07/11/2013 16:50:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsIUElementsList]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNfieldsIUElementsList]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeElementsPosition]    Script Date: 07/11/2013 16:50:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeElementsPosition]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeElementsPosition]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeGroupCFPosition]    Script Date: 07/11/2013 16:50:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeGroupCFPosition]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeGroupCFPosition]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeGroupCFPosition]    Script Date: 07/11/2013 16:50:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeGroupCFPosition]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeGroupCFPosition]
(
@ComandType	int,
@FieldsTemplateID	int,
@CustomFieldID	int       
)
AS
DECLARE @CurrentPosition int;
SET @CurrentPosition = 0;
DECLARE @MaxMinPosition int;
SET @MaxMinPosition = 0;
DECLARE @ContentUpDownID int;
SET @ContentUpDownID = 0;
DECLARE @PositionOneUpDown int;
SET @PositionOneUpDown = 0;
BEGIN TRANSACTION;
BEGIN TRY
        SET NOCOUNT ON;      
        IF (@ComandType = 1) -- ovo je za pomicanje gore, prema vrhu, tj prema prvome koji je dodan u listu
        BEGIN
			SELECT @CurrentPosition = Position FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems] WHERE FieldsTemplateID = @FieldsTemplateID AND CustomFieldID = @CustomFieldID;
			SELECT @MaxMinPosition = min(Position) FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems] WHERE FieldsTemplateID = @FieldsTemplateID;
			IF (@CurrentPosition <> @MaxMinPosition) -- tu se može usporediti kad je to min value
				BEGIN
					SELECT @PositionOneUpDown = max(Position) FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems] WHERE FieldsTemplateID = @FieldsTemplateID AND Position < @CurrentPosition;
					UPDATE {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems] SET Position = @CurrentPosition WHERE Position = @PositionOneUpDown AND FieldsTemplateID = @FieldsTemplateID;
					UPDATE {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems] SET Position = @PositionOneUpDown WHERE FieldsTemplateID = @FieldsTemplateID AND CustomFieldID = @CustomFieldID;
				END
        END
        ELSE IF(@ComandType = 0) -- ovo je za pomicanje dolje -- znači da je commandType jednako 0, ali budemo mi to provjerili za svaki slučaj
		BEGIN
			SELECT @CurrentPosition = Position FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems] WHERE FieldsTemplateID = @FieldsTemplateID AND CustomFieldID = @CustomFieldID;
			SELECT @MaxMinPosition = max(Position) FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems] WHERE FieldsTemplateID = @FieldsTemplateID;
			IF (@CurrentPosition <> @MaxMinPosition)
				BEGIN
					SELECT @PositionOneUpDown = min(Position) FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems] WHERE FieldsTemplateID = @FieldsTemplateID AND Position > @CurrentPosition;
					UPDATE {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems] SET Position = @CurrentPosition WHERE Position = @PositionOneUpDown AND FieldsTemplateID = @FieldsTemplateID;
					UPDATE {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems] SET Position = @PositionOneUpDown WHERE FieldsTemplateID = @FieldsTemplateID AND CustomFieldID = @CustomFieldID;
				END
		END        
END TRY
BEGIN CATCH
    IF @@TRANCOUNT > 0
        ROLLBACK TRANSACTION;
END CATCH;

IF @@TRANCOUNT > 0
    COMMIT TRANSACTION;
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeElementsPosition]    Script Date: 07/11/2013 16:50:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeElementsPosition]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeElementsPosition]
(
@ComandType	int,
@FieldElementID	int,
@CustomFieldID	int       
)
AS
DECLARE @CurrentPosition int;
SET @CurrentPosition = 0;
DECLARE @MaxMinPosition int;
SET @MaxMinPosition = 0;
DECLARE @ContentUpDownID int;
SET @ContentUpDownID = 0;
DECLARE @PositionOneUpDown int;
SET @PositionOneUpDown = 0;
BEGIN TRANSACTION;
BEGIN TRY
        SET NOCOUNT ON;      
        IF (@ComandType = 1) -- ovo je za pomicanje gore, prema vrhu, tj prema prvome koj ije dodan u listu
        BEGIN
			SELECT @CurrentPosition = Position FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements] WHERE FieldElementID = @FieldElementID AND CustomFieldID = @CustomFieldID;
			SELECT @MaxMinPosition = min(Position) FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements] WHERE CustomFieldID = @CustomFieldID;
			IF (@CurrentPosition <> @MaxMinPosition) -- tu se može usporediti kad je to min value
				BEGIN
					SELECT @PositionOneUpDown = max(Position) FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements] WHERE CustomFieldID = @CustomFieldID AND Position < @CurrentPosition;
					UPDATE {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements] SET Position = @CurrentPosition WHERE Position = @PositionOneUpDown AND CustomFieldID = @CustomFieldID;
					UPDATE {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements] SET Position = @PositionOneUpDown WHERE FieldElementID = @FieldElementID AND CustomFieldID = @CustomFieldID;
				END
        END
        ELSE IF(@ComandType = 0) -- ovo je za pomicanje dolje -- znači da je commandType jednako 0, ali budemo mi to provjerili za svaki slučaj
		BEGIN
			SELECT @CurrentPosition = Position FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements] WHERE FieldElementID = @FieldElementID AND CustomFieldID = @CustomFieldID;
			SELECT @MaxMinPosition = max(Position) FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements] WHERE CustomFieldID = @CustomFieldID;
			IF (@CurrentPosition <> @MaxMinPosition)
				BEGIN
					SELECT @PositionOneUpDown = min(Position) FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements] WHERE CustomFieldID = @CustomFieldID AND Position > @CurrentPosition;
					UPDATE {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements] SET Position = @CurrentPosition WHERE Position = @PositionOneUpDown AND CustomFieldID = @CustomFieldID;
					UPDATE {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements] SET Position = @PositionOneUpDown WHERE FieldElementID = @FieldElementID AND CustomFieldID = @CustomFieldID;
				END
		END        
END TRY
BEGIN CATCH
    IF @@TRANCOUNT > 0
        ROLLBACK TRANSACTION;
END CATCH;

IF @@TRANCOUNT > 0
    COMMIT TRANSACTION;
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNfieldsIUElementsList]    Script Date: 07/11/2013 16:50:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsIUElementsList]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNfieldsIUElementsList]
	@CustomFieldID int,
	@FieldElementID int = 0,
	@FEParentID int = null,
    @Text nvarchar(300), 
    @DefSelected bit = 0      
AS 
DECLARE @NewPosition int;
DECLARE @DateCreated datetime;
DECLARE @inserted int;
SET @inserted = 0;
SET @NewPosition = ''0'';
SET @DateCreated = GETUTCDATE();
BEGIN TRANSACTION;
BEGIN TRY
    SET NOCOUNT ON;
    -- Get last position
    IF @FieldElementID = 0 -- onda je insert
		BEGIN
			IF exists (SELECT Position FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements] WHERE CustomFieldID=@CustomFieldID)
				BEGIN
				    SELECT @NewPosition = max(Position) FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements] WHERE CustomFieldID=@CustomFieldID;
					SET @NewPosition = @NewPosition + 10;
				END
			ELSE
				BEGIN
					SET @NewPosition = 10; 
				END
			INSERT INTO {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements]([CustomFieldID],[FEParentID],[Text],[Position],[DefSelected])VALUES(@CustomFieldID,@FEParentID,@Text,@NewPosition,@DefSelected)
			SET @inserted = SCOPE_IDENTITY();
		END
	ELSE -- onda je update
	BEGIN
		UPDATE {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements] SET [FEParentID] = @FEParentID, [Text] = @Text WHERE FieldElementID=@FieldElementID AND CustomFieldID = @CustomFieldID; 	
	END       
END TRY
BEGIN CATCH
    IF @@TRANCOUNT > 0
        ROLLBACK TRANSACTION;
END CATCH;

IF @@TRANCOUNT > 0
    COMMIT TRANSACTION;

return @inserted;
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNfieldsAddToExchangeRateList]    Script Date: 07/11/2013 16:50:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsAddToExchangeRateList]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNfieldsAddToExchangeRateList]
	@ACodeBase nvarchar(5),
	@PortalID int,
	@ACode nvarchar(5),
    @ExchangeRate decimal(19,6), 
    @UnitOf int,
    @DisplayOnReport bit,
    @DisplayFormat nvarchar(10)
AS 
DECLARE @NewPosition int;
DECLARE @DateCreated datetime;
DECLARE @inserted int;
SET @inserted = 0;
SET @NewPosition = 0;
SET @DateCreated = GETUTCDATE();
BEGIN TRANSACTION;
BEGIN TRY
    SET NOCOUNT ON 
	IF exists (SELECT Position FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeRate] WHERE PortalID = @PortalID)
	BEGIN
		SELECT @NewPosition = max(Position) FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeRate] WHERE PortalID = @PortalID;
	SET @NewPosition = @NewPosition + 10;
	END
	ELSE
	BEGIN
		SET @NewPosition = 10; 
	END
	INSERT INTO {databaseOwner}[{objectQualifier}EasyDNNfieldsExchangeRate] ([ACodeBase],[PortalID],[ACode],[Unit],[ExchangeRate],[DateTime],[Position],[DisplayOnReport],[DisplayFormat]) VALUES (@ACodeBase, @PortalID, @ACode,@UnitOf, @ExchangeRate, @DateCreated, @NewPosition, @DisplayOnReport, @DisplayFormat)
	SET @inserted = SCOPE_IDENTITY();
END TRY
BEGIN CATCH
    IF @@TRANCOUNT > 0
        ROLLBACK TRANSACTION;
END CATCH;

IF @@TRANCOUNT > 0
    COMMIT TRANSACTION;

return @inserted;
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNfieldsAddCustomFieldToTemplate]    Script Date: 07/11/2013 16:50:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldsAddCustomFieldToTemplate]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNfieldsAddCustomFieldToTemplate]
	@FieldsTemplateID int,
	@CustomFieldID int   
AS 
	DECLARE @NewPosition int;
	DECLARE @DateCreated datetime;
	DECLARE @inserted int;
	SET @inserted = 0;
	SET @NewPosition = ''0'';
	SET @DateCreated = GETDATE();
BEGIN TRANSACTION;
BEGIN TRY
    SET NOCOUNT ON;
    IF NOT exists (SELECT CustomFieldID FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems] WHERE FieldsTemplateID = @FieldsTemplateID AND CustomFieldID=@CustomFieldID)
    BEGIN
		IF exists (SELECT Position FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems] WHERE FieldsTemplateID = @FieldsTemplateID)
		BEGIN
		    SELECT @NewPosition = max(Position) FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems] WHERE FieldsTemplateID = @FieldsTemplateID;
			SET @NewPosition = @NewPosition + 10;
		END
		ELSE
		BEGIN
			SET @NewPosition = 10; 
		END
		INSERT INTO {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems] ([FieldsTemplateID],[CustomFieldID],[Position]) VALUES (@FieldsTemplateID,@CustomFieldID, @NewPosition);
		SET @inserted = SCOPE_IDENTITY();  
	END
END TRY
BEGIN CATCH
    IF @@TRANCOUNT > 0
        ROLLBACK TRANSACTION;
END CATCH;

IF @@TRANCOUNT > 0
    COMMIT TRANSACTION;

return @inserted;
' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNfieldGetMultiControlsElementsByParent]    Script Date: 07/11/2013 16:50:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNfieldGetMultiControlsElementsByParent]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNfieldGetMultiControlsElementsByParent]
    @ParentID int
AS 
DECLARE @FieldsWithParent TABLE
(
	CustomFieldID int
)
DECLARE @PartialChildeElements TABLE
(
 [CustomFieldID] int,[FieldElementID] int,[FEParentID] int,[Text] nvarchar(300),[Position] int,[DefSelected] bit
)
SET NOCOUNT ON;
  
INSERT @FieldsWithParent SELECT [CustomFieldID]
  FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CFParentID IN (SELECT TOP 1 [CustomFieldID] FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements] 
  WHERE FieldElementID = @ParentID);
  
WITH CTE AS(SELECT f.[CustomFieldID],me.[FieldElementID],me.[FEParentID],me.[Text],me.[Position],me.[DefSelected]
 FROM  {databaseOwner}[{objectQualifier}EasyDNNfields] as f LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements] as me ON  f.CustomFieldID = me.CustomFieldID
 WHERE f.CustomFieldID IN (SELECT [CustomFieldID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] as f2 
 WHERE f2.CFParentID IN (SELECT TOP 1 [CustomFieldID] FROM {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements] 
 WHERE FieldElementID = @ParentID))) INSERT @PartialChildeElements SELECT [CustomFieldID],[FieldElementID],[FEParentID],[Text],[Position],[DefSelected] FROM CTE WHERE FEParentID = @ParentID OR FEParentID IS NULL

SELECT temp.[CustomFieldID],[FieldElementID],[FEParentID],[Text],[Position],[DefSelected] FROM @PartialChildeElements as c RIGHT OUTER JOIN @FieldsWithParent as temp ON  temp.CustomFieldID = c.CustomFieldID ORDER BY c.CustomFieldID ASC, Position ASC;
' 
END
GO


IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'PublishDateValueType')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD PublishDateValueType tinyint CONSTRAINT DF_{objectQualifier}EasyDNNNewsModuleSettings_PublishDateValueType DEFAULT(0) NOT NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'PublishDateValue')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD PublishDateValue datetime NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'ExpireDateValueType')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD ExpireDateValueType tinyint CONSTRAINT DF_{objectQualifier}EasyDNNNewsModuleSettings_ExpireDateValueType DEFAULT(3) NOT NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'ExpireDateValueToAdd')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD ExpireDateValueToAdd int CONSTRAINT DF_{objectQualifier}EasyDNNNewsModuleSettings_ExpireDateValueToAdd DEFAULT(1000) NOT NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'ExpireDateValue')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD ExpireDateValue datetime NULL
END
GO

IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'CustomFieldsPMSource')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD CustomFieldsPMSource tinyint CONSTRAINT DF_{objectQualifier}EasyDNNNewsModuleSettings_CustomFieldsPMSource DEFAULT(1) NOT NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'CFUserSelectionType')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD CFUserSelectionType tinyint CONSTRAINT DF_{objectQualifier}EasyDNNNewsModuleSettings_CFUserSelectionType DEFAULT(0) NOT NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'CFSelectedGroup')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD CFSelectedGroup int NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'CFEnableGroupSelection')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD CFEnableGroupSelection BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsModuleSettings_CFEnableGroupSelection DEFAULT(1) NOT NULL
END
GO

IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'PublishDateValueType')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD PublishDateValueType tinyint CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_PublishDateValueType DEFAULT(0) NOT NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'PublishDateValue')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD PublishDateValue datetime NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'ExpireDateValueType')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD ExpireDateValueType tinyint CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_ExpireDateValueType DEFAULT(3) NOT NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'ExpireDateValueToAdd')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD ExpireDateValueToAdd int CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_ExpireDateValueToAdd DEFAULT(1000) NOT NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'ExpireDateValue')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD ExpireDateValue datetime NULL
END
GO

IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'CFUserSelectionType')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD CFUserSelectionType tinyint CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_CFUserSelectionType DEFAULT(0) NOT NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'CFSelectedGroup')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD CFSelectedGroup int NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'CFEnableGroupSelection')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD CFEnableGroupSelection BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_CFEnableGroupSelection DEFAULT(1) NOT NULL
END
GO

IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsRolePremissionSettings' and column_name = 'CustomFields')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] ADD CustomFields BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsRolePremissionSettings_CustomFields DEFAULT(0) NOT NULL
END
GO

IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsUserPremissionSettings' and column_name = 'CustomFields')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] ADD CustomFields BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsUserPremissionSettings_CustomFields DEFAULT(0) NOT NULL
END
GO

IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsUserPremissionSettings' and column_name = 'CFGroupeID')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] ADD CFGroupeID BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsUserPremissionSettings_CFGroupeID DEFAULT(0) NOT NULL
END
GO

IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsDocuments' and column_name = 'NumberOfDownloads')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsDocuments] ADD NumberOfDownloads int CONSTRAINT DF_{objectQualifier}EasyDNNNewsDocuments_NumberOfDownloads DEFAULT(0) NOT NULL
END
GO

IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsDocuments' and column_name = 'FileSize')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsDocuments] ADD FileSize bigint CONSTRAINT DF_{objectQualifier}EasyDNNNewsDocuments_FileSize DEFAULT(0) NOT NULL
END
GO

/****** Object:  ForeignKey [{objectQualifier}EasyDNNNews_EasyDNNfieldsTemplate]    Script Date: 07/16/2013 15:30:09 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNews_EasyDNNfieldsTemplate]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNews]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNews]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNews_EasyDNNfieldsTemplate] FOREIGN KEY([CFGroupeID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplate] ([FieldsTemplateID]) ON DELETE SET NULL
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNews_EasyDNNfieldsTemplate]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNews]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNews] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNews_EasyDNNfieldsTemplate]
GO
/****** Object:  ForeignKey [{objectQualifier}EasyDNNNewsModuleSettings_EasyDNNfieldsTemplate]    Script Date: 07/16/2013 15:30:09 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsModuleSettings_EasyDNNfieldsTemplate]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsModuleSettings_EasyDNNfieldsTemplate] FOREIGN KEY([CFSelectedGroup])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplate] ([FieldsTemplateID])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsModuleSettings_EasyDNNfieldsTemplate]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsModuleSettings_EasyDNNfieldsTemplate]
GO
/****** Object:  ForeignKey [{objectQualifier}EasyDNNNewsPortalSettings_EasyDNNfieldsTemplate]    Script Date: 07/16/2013 15:30:09 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsPortalSettings_EasyDNNfieldsTemplate]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsPortalSettings_EasyDNNfieldsTemplate] FOREIGN KEY([CFSelectedGroup])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplate] ([FieldsTemplateID])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[FK_{objectQualifier}EasyDNNNewsPortalSettings_EasyDNNfieldsTemplate]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsPortalSettings_EasyDNNfieldsTemplate]
GO
/****New table Document Download Info ****/

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsDocumentDownloadInfo]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNnewsDocumentDownloadInfo](
	[DownloadInfoID] [int] IDENTITY(1,1) NOT NULL,
	[DocEntryID] [int] NOT NULL,
	[UserID] [int] NULL,
	[DateDownload] [datetime] NOT NULL,
	[DownloadIP] [nvarchar](50) NOT NULL,
 CONSTRAINT [PK_{objectQualifier}EasyDNNnewsDocumentDownloadInfo] PRIMARY KEY CLUSTERED 
(
	[DownloadInfoID] ASC
)WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
/****** Object:  Default [DF_EasyDNNnewsDocumentDownloadInfo_DateDownload]    Script Date: 07/24/2013 09:46:15 ******/
IF Not EXISTS (SELECT * FROM sys.default_constraints WHERE object_id = OBJECT_ID(N'{databaseOwner}[DF_{objectQualifier}EasyDNNnewsDocumentDownloadInfo_{objectQualifier}DateDownload]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsDocumentDownloadInfo]'))
Begin
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[DF_{objectQualifier}EasyDNNnewsDocumentDownloadInfo_{objectQualifier}DateDownload]') AND type = 'D')
BEGIN
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNnewsDocumentDownloadInfo] ADD  CONSTRAINT [DF_{objectQualifier}EasyDNNnewsDocumentDownloadInfo_{objectQualifier}DateDownload]  DEFAULT (getutcdate()) FOR [DateDownload]
END


End
GO
/****** Object:  ForeignKey [FK_EasyDNNnewsDocumentDownloadInfo_EasyDNNNewsDocuments]    Script Date: 07/24/2013 09:46:15 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNnewsDocumentDownloadInfo_{objectQualifier}EasyDNNNewsDocuments]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsDocumentDownloadInfo]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNnewsDocumentDownloadInfo]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNnewsDocumentDownloadInfo_{objectQualifier}EasyDNNNewsDocuments] FOREIGN KEY([DocEntryID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNNewsDocuments] ([DocEntryID])
ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNnewsDocumentDownloadInfo_{objectQualifier}EasyDNNNewsDocuments]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsDocumentDownloadInfo]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNnewsDocumentDownloadInfo] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNnewsDocumentDownloadInfo_{objectQualifier}EasyDNNNewsDocuments]
GO

/****** Object:  ForeignKey [FK_EasyDNNnewsDocumentDownloadInfo_Users]    Script Date: 07/24/2013 09:46:15 ******/
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNnewsDocumentDownloadInfo_{objectQualifier}Users]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsDocumentDownloadInfo]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNnewsDocumentDownloadInfo]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNnewsDocumentDownloadInfo_{objectQualifier}Users] FOREIGN KEY([UserID])
REFERENCES {databaseOwner}[{objectQualifier}Users] ([UserID])
ON DELETE SET NULL
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNnewsDocumentDownloadInfo_{objectQualifier}Users]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsDocumentDownloadInfo]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNnewsDocumentDownloadInfo] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNnewsDocumentDownloadInfo_{objectQualifier}Users]
GO

/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsPermissions]    Script Date: 07/15/2013 12:39:45 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsPermissions]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsPermissions]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsPermissions]    Script Date: 07/15/2013 12:39:45 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsPermissions]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsPermissions]
    @UserID int,
    @PortalID int,
    @ModuleID int
AS 
SET NOCOUNT ON;
DECLARE @CheckModuleID bit;
IF @ModuleID IS NULL
BEGIN
	SET @CheckModuleID = 1;
END
ELSE
BEGIN
	SET @CheckModuleID = 0;
END

IF @UserID = -1
BEGIN
	SELECT [ApproveArticles],[DocumentUpload],[DocumentDownload],[AddEditCategories],[AllowToComment],[ApproveComments],[ViewPaidContent],[ShowSharedGallery],[ShowCustomGallery],[AddArticleToAll],[ShowAllCategories],[AddPerArticle],[PostToSocialNetwork],
	      [SubTitle],[SEO],[Summary],[Text],[Page],[File],[Link],[None],[Tags],[ArticleGallery],[GoogleMap],[ChangeTemplate],[Events],[AllowComments],[Featured],[PublishExpire],[CustomFields]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.RoleID IS NULL AND ((@CheckModuleID = 1 AND (rps.ModuleID IS NULL)) OR (@CheckModuleID = 0 AND (rps.ModuleID = @ModuleID))) AND rps.PortalID = @PortalID
END
ELSE
BEGIN
	WITH RoleAndUserRights as
	(
		SELECT DISTINCT [ApproveArticles],[DocumentUpload],[DocumentDownload],[AddEditCategories],[AllowToComment],[ApproveComments],[ViewPaidContent],[ShowSharedGallery],[ShowCustomGallery],[AddArticleToAll],[ShowAllCategories],[AddPerArticle],[PostToSocialNetwork],
	        [SubTitle],[SEO],[Summary],[Text],[Page],[File],[Link],[None],[Tags],[ArticleGallery],[GoogleMap],[ChangeTemplate],[Events],[AllowComments],[Featured],[PublishExpire],[CustomFields]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = rps.RoleID
		WHERE ur.UserID = @UserID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE()) AND ((@CheckModuleID = 1 AND (rps.ModuleID IS NULL)) OR (@CheckModuleID = 0 AND (rps.ModuleID = @ModuleID))) AND rps.PortalID = @PortalID
		UNION
		SELECT [ApproveArticles],[DocumentUpload],[DocumentDownload],[AddEditCategories],[AllowToComment],[ApproveComments],[ViewPaidContent],[ShowSharedGallery],[ShowCustomGallery],[AddArticleToAll],[ShowAllCategories],[AddPerArticle],[PostToSocialNetwork],
	        [SubTitle],[SEO],[Summary],[Text],[Page],[File],[Link],[None],[Tags],[ArticleGallery],[GoogleMap],[ChangeTemplate],[Events],[AllowComments],[Featured],[PublishExpire],[CustomFields]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
		WHERE ups.UserID = @UserID AND ((@CheckModuleID = 1 AND (ups.ModuleID IS NULL)) OR (@CheckModuleID = 0 AND (ups.ModuleID = @ModuleID))) AND ups.PortalID = @PortalID
	)
	SELECT TOP(1)
		CASE WHEN EXISTS (SELECT ApproveArticles FROM RoleAndUserRights WHERE ApproveArticles = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS ApproveArticles,
		CASE WHEN EXISTS (SELECT DocumentUpload FROM RoleAndUserRights WHERE DocumentUpload = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS DocumentUpload,
		CASE WHEN EXISTS (SELECT DocumentDownload FROM RoleAndUserRights WHERE DocumentDownload = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS DocumentDownload,
		CASE WHEN EXISTS (SELECT AddEditCategories FROM RoleAndUserRights WHERE AddEditCategories = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS AddEditCategories,
		CASE WHEN EXISTS (SELECT AllowToComment FROM RoleAndUserRights WHERE AllowToComment = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS AllowToComment,
		CASE WHEN EXISTS (SELECT ApproveComments FROM RoleAndUserRights WHERE ApproveComments = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS ApproveComments,
		CASE WHEN EXISTS (SELECT ViewPaidContent FROM RoleAndUserRights WHERE ViewPaidContent = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS ViewPaidContent,
		CASE WHEN EXISTS (SELECT ShowSharedGallery FROM RoleAndUserRights WHERE ShowSharedGallery = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS ShowSharedGallery,
		CASE WHEN EXISTS (SELECT ShowCustomGallery FROM RoleAndUserRights WHERE ShowCustomGallery = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS ShowCustomGallery,
		CASE WHEN EXISTS (SELECT AddArticleToAll FROM RoleAndUserRights WHERE AddArticleToAll = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS AddArticleToAll,
		CASE WHEN EXISTS (SELECT ShowAllCategories FROM RoleAndUserRights WHERE ShowAllCategories = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS ShowAllCategories,
		CASE WHEN EXISTS (SELECT AddPerArticle FROM RoleAndUserRights WHERE AddPerArticle = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS AddPerArticle,
		CASE WHEN EXISTS (SELECT PostToSocialNetwork FROM RoleAndUserRights WHERE PostToSocialNetwork = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS PostToSocialNetwork,
	    CASE WHEN EXISTS (SELECT SubTitle FROM RoleAndUserRights WHERE SubTitle = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS SubTitle,
	    CASE WHEN EXISTS (SELECT SEO FROM RoleAndUserRights WHERE SEO = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS SEO, 
	    CASE WHEN EXISTS (SELECT Summary FROM RoleAndUserRights WHERE Summary = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS Summary, 
	    CASE WHEN EXISTS (SELECT [Text] FROM RoleAndUserRights WHERE [Text] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [Text], 
	    CASE WHEN EXISTS (SELECT [Page] FROM RoleAndUserRights WHERE [Page] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [Page], 
	    CASE WHEN EXISTS (SELECT [File] FROM RoleAndUserRights WHERE [File] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [File], 
	    CASE WHEN EXISTS (SELECT [Link] FROM RoleAndUserRights WHERE [Link] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [Link], 
	    CASE WHEN EXISTS (SELECT [None] FROM RoleAndUserRights WHERE [None] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [None], 
	    CASE WHEN EXISTS (SELECT [Tags] FROM RoleAndUserRights WHERE [Tags] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [Tags], 
	    CASE WHEN EXISTS (SELECT [ArticleGallery] FROM RoleAndUserRights WHERE [ArticleGallery] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [ArticleGallery], 
	    CASE WHEN EXISTS (SELECT [GoogleMap] FROM RoleAndUserRights WHERE [GoogleMap] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [GoogleMap], 
	    CASE WHEN EXISTS (SELECT [ChangeTemplate] FROM RoleAndUserRights WHERE [ChangeTemplate] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [ChangeTemplate], 
	    CASE WHEN EXISTS (SELECT [Events] FROM RoleAndUserRights WHERE [Events] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [Events], 
	    CASE WHEN EXISTS (SELECT [Featured] FROM RoleAndUserRights WHERE [Featured] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [Featured], 
	    CASE WHEN EXISTS (SELECT [AllowComments] FROM RoleAndUserRights WHERE [AllowComments] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [AllowComments], 
	    CASE WHEN EXISTS (SELECT [PublishExpire] FROM RoleAndUserRights WHERE [PublishExpire] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [PublishExpire],
	    CASE WHEN EXISTS (SELECT [CustomFields] FROM RoleAndUserRights WHERE [CustomFields] = 1) THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS [CustomFields]
	FROM RoleAndUserRights
END' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemByPermission]    Script Date: 07/15/2013 14:49:08 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemByPermission]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemByPermission]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemByPermission]    Script Date: 07/15/2013 14:49:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemByPermission]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemByPermission]
	@ViewType tinyint = 0, -- 0 - View, 1 - Editor
	@PortalID int, -- current Portal
	@ModuleID int, -- current Module, portal sharing isto sadrzi dobre kategorije, auto add i setingsi su snimljeni kod tog modula
	@UserID int,
	@CurrentDate Datetime, -- = GetUTCDate,
	@Perm_ViewAllCategores bit = 0, -- permission settings View all categories
	@Perm_EditAllCategores bit = 0, -- permission settings Edit all categories
	@AdminOrSuperUser bit = 0,
	@EditOnlyAsOwner bit = 0, -- news settings
	@UserCanApprove bit = 0, -- news settings
	@LocaleCode nvarchar(20) = '''',
	@PermissionSettingsSource bit = 1, -- 1 portal, 0 module
	@ArticleID int
AS
SET NOCOUNT ON;
DECLARE @EditPermission tinyint;
SET @EditPermission = 0;
DECLARE @UserInRoles TABLE (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());

DECLARE @UserViewCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserEditCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can edit based on permissions

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
	END
	ELSE -- by module
	BEGIN
	INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID AND rps.RoleID IS NULL;
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] as upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
	END
	ELSE -- by module
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] as rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] as upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upsc.[CategoryID];
	END
END



DECLARE @FilterBySocialGroup bit;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;

-- kategorije sa edit pravima
IF @AdminOrSuperUser = 1 OR @Perm_EditAllCategores = 1
BEGIN	
	INSERT INTO @UserEditCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	SET @EditPermission = 1;
END
ELSE
BEGIN
	IF @UserID = -1
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] as rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE -- by module
		BEGIN
		INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] as rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.RoleID IS NULL AND rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID;
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] as rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] as upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upatc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] as rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] as rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles as uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] as upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] as ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upatc.[CategoryID];
		END	
	END
	IF EXISTS(SELECT * FROM @UserEditCategories) BEGIN SET @EditPermission = 2; END
END


DECLARE @CanView bit;
SET @CanView = 0;

IF EXISTS (SELECT n.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as c ON n.ArticleID = c.ArticleID
	INNER JOIN @UserViewCategories as uvc ON uvc.CategoryID = c.CategoryID
	WHERE n.ArticleID=@ArticleID
		AND n.HasPermissions = 0
		AND ((@EditPermission = 1) -- ako si superuser ili admin
		 OR (n.Approved=1 AND n.Active=1) -- ako je izdan i odobrrn
		 OR ((@UserCanApprove = 1 OR n.Approved=1) AND (n.Active=1 OR n.UserID=@UserID)) -- ako imas pravo na approve i item je published
		 OR (n.Active=0 AND n.UserID=@UserID)) -- item nije published moze ga vidjeti samo autor
		AND ((@AdminOrSuperUser = 1) OR (n.UserID = @UserID) OR ((n.PublishDate<=@CurrentDate) AND (n.ExpireDate>=@CurrentDate)))
		)
BEGIN
	SET @CanView = 1;
END
ELSE
BEGIN
	IF @UserID = -1 -- neregistirani korisnik ne moze biti u roli
	BEGIN
		IF EXISTS (SELECT n.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON n.ArticleID = aup.ArticleID
			WHERE aup.ArticleID = @ArticleID AND aup.UserID IS NULL AND n.HasPermissions = 1
				AND ((@UserCanApprove = 1) OR (n.Approved=1))
				AND (n.Active=1 OR n.UserID=@UserID)
				AND ((@AdminOrSuperUser = 1) OR (n.UserID = @UserID) OR ((n.PublishDate<=@CurrentDate) AND (n.ExpireDate>=@CurrentDate))))
		BEGIN
			SET @CanView = 1;
		END
	END
	ELSE
	BEGIN
		IF EXISTS (SELECT n.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] as aup ON n.ArticleID = aup.ArticleID
			WHERE aup.ArticleID = @ArticleID AND n.HasPermissions = 1
				AND ((@EditPermission = 1) OR (
					aup.UserID = @UserID
					AND aup.Show = 1 
					AND ((@UserCanApprove = 1) OR (n.Approved=1))
					AND (n.Active=1 OR n.UserID=@UserID)
				))
				AND ((@AdminOrSuperUser = 1) OR (n.UserID = @UserID) OR ((n.PublishDate<=@CurrentDate) AND (n.ExpireDate>=@CurrentDate))))
		BEGIN
			SET @CanView = 1;
		END
		ELSE
		BEGIN 
			IF EXISTS (SELECT n.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp ON n.ArticleID = arp.ArticleID
				WHERE arp.ArticleID = @ArticleID AND n.HasPermissions = 1
					AND ((@EditPermission = 1) OR (
						((@UserCanApprove = 1) OR (n.Approved=1))
						AND (n.Active=1 OR n.UserID=@UserID)
						AND arp.Show = 1
						AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
				AND ((@AdminOrSuperUser = 1) OR (n.UserID = @UserID) OR ((n.PublishDate<=@CurrentDate) AND (n.ExpireDate>=@CurrentDate))))
			BEGIN
				SET @CanView = 1;
			END
		END
	 END
END
-- ovo se odnosi za lokalizaciju tablice kategorija u posebnu tablicu koja se direktno spaja
DECLARE @localize bit;
SET @localize = 0;
DECLARE @LocalizedCategories TABLE (ID int NOT NULL PRIMARY KEY, Name nvarchar(200), Position int, CategoryURL nvarchar(1500));
IF @LocaleCode <> ''''
BEGIN
	IF EXISTS (SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID = @ArticleID AND LocaleCode = @LocaleCode)
	BEGIN
		SET @localize = 1;
	END;

	WITH LocCategories(ID, Name, Position, CategoryURL) AS (
			SELECT Cat.CategoryID AS ID, cl.Title AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = Cat.CategoryID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON uvc.CategoryID = cl.CategoryID WHERE Cat.PortalID = @PortalID AND cl.LocaleCode = @LocaleCode
		),
		NotLocCategories(ID, Name, Position, CategoryURL) AS (
			SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = Cat.CategoryID WHERE Cat.PortalID = @PortalID AND Cat.CategoryID NOT IN (SELECT ID FROM LocCategories)
		)
		INSERT INTO @LocalizedCategories SELECT ID, Name, Position, CategoryURL FROM (SELECT ID, Name, Position, CategoryURL FROM LocCategories UNION ALL SELECT ID, Name, Position, CategoryURL FROM NotLocCategories) AS ArticleCategories
	END
	
ELSE
BEGIN
	INSERT INTO @LocalizedCategories SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = cat.CategoryID WHERE Cat.PortalID = @PortalID
END
--
IF @CanView = 1
BEGIN
IF @localize = 1
BEGIN
SELECT *,
	CASE @EditPermission 
		WHEN 0 THEN 0
		WHEN 1 THEN 1
		WHEN 2 THEN
		CASE @EditOnlyAsOwner
			WHEN 0 THEN			
				CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as c WHERE c.ArticleID = @ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
					THEN 1
					ELSE
						CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp WHERE arp.ArticleID = @ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT [RoleID] FROM @UserInRoles))
						THEN 1
						ELSE
							CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = @ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
								THEN 1
								ELSE 0
							END
						END
				END  			
			WHEN 1 THEN
				CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as c WHERE Article.UserID = @UserID AND c.ArticleID = @ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
					THEN 1
					ELSE
						CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp WHERE arp.ArticleID = @ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT [RoleID] FROM @UserInRoles))
						THEN 1
						ELSE
							CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = @ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
								THEN 1
								ELSE 0
							END
						END 
				END
		END 
	END AS ''CanEdit'',
	(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = @ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
	 CASE Article.Active
		WHEN 1 THEN 0
		WHEN 0 THEN 1
	 END AS  ''Published'',
	 CASE @UserCanApprove
		WHEN 0 THEN 0
		WHEN 1 THEN
			CASE Article.Approved
			 WHEN 1 THEN 0
			 WHEN 0 THEN
				 CASE Article.Active
					WHEN 1 THEN 1
					WHEN 0 THEN 0
				END
			END
	 END AS ''Approve''
	 FROM (
	  SELECT ln.[ArticleID],ln.[PortalID],ln.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],ln.[ArticleImage],ln.[DateAdded],ln.[LastModified],ln.[PublishDate]
		  ,ln.[ExpireDate],ln.[Approved],ln.[Featured],ln.[NumberOfViews],ln.[RatingValue],ln.[RatingCount],ln.[AllowComments],ln.[Active]
		  ,fla.[clTitleLink] AS TitleLink,ln.[DetailType],fla.[DetailTypeData],ln.[DetailsTemplate],ln.[DetailsTheme],ln.[GalleryPosition],ln.[GalleryDisplayType]
		  ,ln.[ShowMainImage],ln.[ShowMainImageFront],ln.[CommentsTheme],ln.[ArticleImageFolder],ln.[NumberOfComments]
		  ,ln.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],ln.[DisplayStyle],ln.[DetailTarget]
		  ,ln.[ArticleFromRSS],ln.[HasPermissions],ln.[EventArticle],ln.[DetailMediaType],ln.[DetailMediaData],ln.[AuthorAliasName],ln.[ShowGallery],ln.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription],ln.[CFGroupeID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as ln INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] as fla ON fla.ArticleID = ln.ArticleID AND fla.LocaleCode = @LocaleCode WHERE ln.ArticleID = @ArticleID
	 ) AS Article;
END
ELSE
BEGIN
SELECT *,
	CASE @EditPermission 
		WHEN 0 THEN 0
		WHEN 1 THEN 1
		WHEN 2 THEN
		CASE @EditOnlyAsOwner
			WHEN 0 THEN			
				CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as c WHERE c.ArticleID = @ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
					THEN 1
					ELSE
						CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp WHERE arp.ArticleID = @ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT [RoleID] FROM @UserInRoles))
						THEN 1
						ELSE
							CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = @ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
								THEN 1
								ELSE 0
							END
						END
				END  			
			WHEN 1 THEN
				CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] as c WHERE Article.UserID = @UserID AND c.ArticleID = @ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
					THEN 1
					ELSE
						CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] as arp WHERE arp.ArticleID = @ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT [RoleID] FROM @UserInRoles))
						THEN 1
						ELSE
							CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = @ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
								THEN 1
								ELSE 0
							END
						END 
				END
		END 
	END AS ''CanEdit'',
	(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = @ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
	 CASE Article.Active
		WHEN 1 THEN 0
		WHEN 0 THEN 1
	 END AS  ''Published'',
	 CASE @UserCanApprove
		WHEN 0 THEN 0
		WHEN 1 THEN
			CASE Article.Approved
			 WHEN 1 THEN 0
			 WHEN 0 THEN
				 CASE Article.Active
					WHEN 1 THEN 1
					WHEN 0 THEN 0
				END
			END
	 END AS ''Approve''
	 FROM (
	  SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		  ,n.TitleLink,n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
		 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] as n WHERE ArticleID = @ArticleID) AS Article;	 
END
END' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsByTagID]    Script Date: 07/18/2013 22:05:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsByTagID]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsByTagID]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplay]    Script Date: 07/18/2013 22:05:07 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplay]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplay]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplayByDateWithEventsRange]    Script Date: 07/18/2013 22:05:07 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplayByDateWithEventsRange]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplayByDateWithEventsRange]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplayOnlyEvents]    Script Date: 07/18/2013 22:05:07 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplayOnlyEvents]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplayOnlyEvents]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsFromSearch]    Script Date: 07/18/2013 22:05:07 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsFromSearch]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsFromSearch]
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsFromSearch]    Script Date: 07/18/2013 22:05:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsFromSearch]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsFromSearch]
	@ViewType tinyint = 0, -- 0 - View, 1 - Editor
	@PortalID int, -- current Portal
	@ModuleID int, -- current Module, portal sharing isto sadrzi dobre kategorije, auto add i setingsi su snimljeni kod tog modula
	@UserID int,
	@CurrentDate Datetime, -- = GetUTCDate,
	@OrderBy nvarchar(20) = ''PublishDate DESC'',
	@ItemsFrom int = 1,
	@ItemsTo int = 5,
	@ShowAllAuthors bit = 1, -- gleda se filtriranje autora po modulu ili portalu
	@FilterByAuthor int = 0, -- ako se selektiran jedan autor
	@FilterByGroupID int = 0, -- ako je selektirana grupa
	@FilterByDNNUserID int = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID int = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@EditOnlyAsOwner bit = 0, -- news settings
	@UserCanApprove bit = 0, -- news settings
	@LocaleCode nvarchar(20) = '''',
	@IsSocialInstance bit = 0,	
	--@FirstOrderBy nvarchar(20) = '''',--''Featured DESC'', -- featured articles on top	
	@Perm_ViewAllCategores bit = 0, -- permission settings View all categories
	@Perm_EditAllCategores bit = 0, -- permission settings Edit all categories
	@AdminOrSuperUser bit = 0,
	@CategoryFilterType tinyint = 1, -- 0 All categories, 1 - SELECTion, 2 - AutoAdd
	@PermissionSettingsSource bit = 1, -- 1 portal, 0 module
	@FillterSettingsSource bit = 1, -- 1 portal, 0 module
	
	-- ODNOSI SE NA SEARCH UNUTAR SEARCH MODULA
	@OuterPermissionSource tinyint= 0, -- 0 none, 1 portal, 2 module
	@OuterPermissionID int = 0,
	@OuterModuleID int = 0,
	
	@SearchType tinyint = 3,
	@SearchCondition nvarchar(300),
	@SearchModulePermissions bit = 0,
	@HideUnlocalizedItems bit = 0
AS
SET NOCOUNT ON;
DECLARE @SearchTable TABLE (Words nvarchar(100) NOT NULL);
BEGIN
	DECLARE @word nvarchar(100), @PosWord int
	SET @SearchCondition = LTRIM(RTRIM(@SearchCondition))+ '':''
	SET @PosWord = CHARINDEX('':'', @SearchCondition, 1)
	IF REPLACE(@SearchCondition, '':'', '''') <> ''''
	BEGIN
		WHILE @PosWord > 0
		BEGIN
			SET @word = LTRIM(RTRIM(LEFT(@SearchCondition, @PosWord - 1)))
			IF @word <> ''''
			BEGIN
				INSERT INTO @SearchTable (Words) VALUES (''%''+@word+''%'') --Use Appropriate conversion
			END
			SET @SearchCondition = RIGHT(@SearchCondition, LEN(@SearchCondition) - @PosWord)
			SET @PosWord = CHARINDEX('':'', @SearchCondition, 1)
		END
	END
END

DECLARE @EditPermission tinyint;
SET @EditPermission = 0;
DECLARE @UserInRoles TABLE (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());
DECLARE @UserViewCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserEditCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can edit based on permissions
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter
DECLARE @FiltredByCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories that are filtred by module or portal

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @SearchModulePermissions = 1 -- ovaj dio se odnosi na dozvole ako se pristupa iz satelitskog modula
BEGIN
	IF @OuterPermissionSource = 0
	BEGIN
		INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @UserID = -1
	BEGIN
		IF @OuterPermissionSource = 1 -- portal
		BEGIN
		INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE IF @OuterPermissionSource = 2 -- module
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @OuterPermissionID AND rps.RoleID IS NULL;
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @OuterModuleID GROUP BY rpsc.[CategoryID]
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @OuterPermissionID GROUP BY upsc.[CategoryID];
		END
	END 
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
	END
	ELSE -- by module
	BEGIN
	INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID AND rps.RoleID IS NULL;
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
	END
	ELSE -- by module
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upsc.[CategoryID];
	END
END

IF @OuterModuleID <> 0 -- ovaj dio se odnosi na filter kategorija iz satelitskog modula
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @OuterModuleID
			
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID;
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci ON pci.CategoryID = cl.CategoryID AND pci.PortalID = @PortalID
			
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID;
		END
		ELSE -- module
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @ModuleID
			
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID;
		END
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;			
		END
		ELSE -- module
		BEGIN
			WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
		END
	END
END

DECLARE @FilterBySocialGroup bit;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID int NOT NULL PRIMARY KEY);
IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				SELECT @FilterByAuthor = UserID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
			END
		END
	END
ELSE
BEGIN
-- ovaj dio odnosi se na filtriranje autora
	IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iu other modula
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID
	END
	ELSE
	BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			IF @FillterSettingsSource = 1 -- by portal
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID
			END
			ELSE -- by modul
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID
			END
		END
		ELSE IF @FilterByAuthor <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
		END
		ELSE IF @FilterByGroupID <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID
		END
	END
END
-- kategorije sa edit pravima
IF @AdminOrSuperUser = 1 OR @Perm_EditAllCategores = 1
BEGIN	
	INSERT INTO @UserEditCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	SET @EditPermission = 1;
END
ELSE IF @SearchModulePermissions = 1 -- ovaj dio se odnosi na dozvole ako se pristupa iz satelitskog modula
BEGIN
	IF @OuterPermissionSource = 0
	BEGIN
		INSERT INTO @UserEditCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		SET @EditPermission = 1;
	END
	ELSE IF @UserID = -1
	BEGIN
		IF @OuterPermissionSource = 1 -- portal settings
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE IF @OuterPermissionSource = 2 -- module settings
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.RoleID IS NULL AND rps.PortalID = @PortalID AND rps.ModuleID = @OuterPermissionID;
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upatc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @OuterPermissionID GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @OuterPermissionID GROUP BY upatc.[CategoryID];
		END	
	END
END
ELSE
BEGIN
	IF @UserID = -1
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE -- by module
		BEGIN
		INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.RoleID IS NULL AND rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID;
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upatc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upatc.[CategoryID];
		END	
	END
	IF EXISTS(SELECT * FROM @UserEditCategories) BEGIN SET @EditPermission = 2; END
END

DECLARE @LocalizedCategories TABLE (ID int NOT NULL PRIMARY KEY, Name nvarchar(200), Position int, CategoryURL nvarchar(1500));
IF @LocaleCode <> ''''
BEGIN
	WITH LocCategories(ID, Name, Position, CategoryURL) AS (
		SELECT Cat.CategoryID AS ID, cl.Title AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = Cat.CategoryID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON uvc.CategoryID = cl.CategoryID WHERE Cat.PortalID = @PortalID AND cl.LocaleCode = @LocaleCode
	),
	NotLocCategories(ID, Name, Position, CategoryURL) AS (
		SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = Cat.CategoryID WHERE Cat.PortalID = @PortalID AND Cat.CategoryID NOT IN (SELECT ID FROM LocCategories)
	)
	INSERT INTO @LocalizedCategories SELECT ID, Name, Position, CategoryURL FROM (SELECT ID, Name, Position, CategoryURL FROM LocCategories UNION ALL SELECT ID, Name, Position, CategoryURL FROM NotLocCategories) AS ArticleCategories
END
ELSE
BEGIN
	INSERT INTO @LocalizedCategories SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = cat.CategoryID WHERE Cat.PortalID = @PortalID
END

IF @IsSocialInstance = 0
BEGIN
IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
		SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY 
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))	
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT *,
			CASE @AdminOrSuperUser 
				WHEN 0 THEN 0
				WHEN 1 THEN 1
				WHEN 2 THEN
				CASE @EditOnlyAsOwner
					WHEN 0 THEN			
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END
						END  			
					WHEN 1 THEN
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END 
						END
				END
				WHEN 3 THEN
					CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
						CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
							THEN 1
							ELSE 0
							END
						END 
			END AS ''CanEdit'',
			(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
			 CASE Result.Active
				WHEN 1 THEN 0
				WHEN 0 THEN 1
			 END AS ''Published'',
			 CASE @UserCanApprove
				WHEN 0 THEN 0
				WHEN 1 THEN
					CASE Result.Approved
					 WHEN 1 THEN 0
					 WHEN 0 THEN
						 CASE Result.Active
							WHEN 1 THEN 1
							WHEN 0 THEN 0
						END
					END
			 END AS ''Approve''
			 FROM (
			 SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
				   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
			 UNION ALL
			 SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription],n.[CFGroupeID]
			  FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID) As Result
			ORDER BY
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @AdminOrSuperUser 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS  ''Approve''
		FROM (SELECT
		 n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID], ROW_NUMBER() OVER (ORDER BY 
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))	
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))	
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
END
ELSE IF @FilterBySocialGroup = 1
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
		SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY 
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1)AND (na.Active=1 OR na.UserID=@UserID)))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT *,
			CASE @AdminOrSuperUser 
				WHEN 0 THEN 0
				WHEN 1 THEN 1
				WHEN 2 THEN
				CASE @EditOnlyAsOwner
					WHEN 0 THEN			
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END
						END  			
					WHEN 1 THEN
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END 
						END
				END
				WHEN 3 THEN
					CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
						CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
							THEN 1
							ELSE 0
							END
						END 
			END AS ''CanEdit'',
			(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
			 CASE Result.Active
				WHEN 1 THEN 0
				WHEN 0 THEN 1
			 END AS ''Published'',
			 CASE @UserCanApprove
				WHEN 0 THEN 0
				WHEN 1 THEN
					CASE Result.Approved
					 WHEN 1 THEN 0
					 WHEN 0 THEN
						 CASE Result.Active
							WHEN 1 THEN 1
							WHEN 0 THEN 0
						END
					END
			 END AS ''Approve''
			 FROM (
				 SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
					   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
				 UNION ALL
				 SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription],n.[CFGroupeID]
				  FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID) As Result
			ORDER BY
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @AdminOrSuperUser 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS  ''Approve''
		FROM (SELECT
		 n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID], ROW_NUMBER() OVER (ORDER BY 
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			 UNION
			 SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
END
ELSE IF @FilterByDNNUserID <> 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
		SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY 
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT *,
			CASE @AdminOrSuperUser 
				WHEN 0 THEN 0
				WHEN 1 THEN 1
				WHEN 2 THEN
				CASE @EditOnlyAsOwner
					WHEN 0 THEN			
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END
						END  			
					WHEN 1 THEN
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END 
						END
				END
				WHEN 3 THEN
					CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
						CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
							THEN 1
							ELSE 0
							END
						END 
			END AS ''CanEdit'',
			(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
			 CASE Result.Active
				WHEN 1 THEN 0
				WHEN 0 THEN 1
			 END AS ''Published'',
			 CASE @UserCanApprove
				WHEN 0 THEN 0
				WHEN 1 THEN
					CASE Result.Approved
					 WHEN 1 THEN 0
					 WHEN 0 THEN
						 CASE Result.Active
							WHEN 1 THEN 1
							WHEN 0 THEN 0
						END
					END
			 END AS ''Approve''
			 FROM (
				 SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
					   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
				 UNION ALL
				 SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription],n.[CFGroupeID]
				  FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID) As Result
			ORDER BY
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @AdminOrSuperUser 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS  ''Approve''
		FROM (SELECT
		 n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID], ROW_NUMBER() OVER (ORDER BY 
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN @SearchTable AS st ON(
					(@SearchType = 3 AND (na.SubTitle Like st.Words OR na.Title Like st.Words OR na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 2 AND (na.CleanArticleData Like st.Words))
					OR
					(@SearchType = 1 AND (na.SubTitle Like st.Words OR na.Title Like st.Words))
				)
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
				INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
END' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplayOnlyEvents]    Script Date: 07/18/2013 22:05:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplayOnlyEvents]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplayOnlyEvents]
	@ViewType tinyint = 0, -- 0 - View, 1 - Editor
	@PortalID int, -- current Portal
	@ModuleID int, -- current Module, portal sharing isto sadrzi dobre kategorije, auto add i setingsi su snimljeni kod tog modula
	@UserID int,
	@CurrentDate Datetime, -- = GetUTCDate,
	@OrderBy nvarchar(20) = ''PublishDate DESC'',
	@ItemsFrom int = 1,
	@ItemsTo int = 5,
	@DateRange bit = 0,
	@FromDate DateTime = ''2012-01-01 00:00:00'', -- ovo ne treba za only events
	@ToDate DateTime = ''2012-01-01 00:00:00'', -- ovo ne treba za only events
	/* od tud ide filter */
	@Featured bit = 0,
	@ShowAllAuthors bit = 1, -- gleda se filtriranje autora po modulu ili portalu
	@FilterByAuthor int = 0,
	@FilterByGroupID int = 0,
	@FilterByTags bit = 0,
	/*@FilterByArticles bit = 0,*/ -- ovoga nema tu !!
	@FilterByDNNUserID int = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID int = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@EditOnlyAsOwner bit = 0, -- news settings
	@UserCanApprove bit = 0, -- news settings
	@LocaleCode nvarchar(20) = '''',
	@IsSocialInstance bit = 0,	
	@FirstOrderBy nvarchar(20) = '''',--''Featured DESC'', -- featured articles on top	
	@Perm_ViewAllCategores bit = 0, -- permission settings View all categories
	@Perm_EditAllCategores bit = 0, -- permission settings Edit all categories
	@AdminOrSuperUser bit = 0,
	@CategoryFilterType tinyint = 1, -- 0 All categories, 1 - SELECTion, 2 - AutoAdd
	@PermissionSettingsSource bit = 0, -- 0 portal, 1 module
	@FillterSettingsSource bit = 0, -- 0 portal, 1 module
	@StartDate DateTime = ''2012-01-01 00:00:00'',
	@OuterModuleID int = 0,
	@HideUnlocalizedItems bit = 0
AS
SET NOCOUNT ON;
DECLARE @EditPermission tinyint;
SET @EditPermission = 0;
IF @OuterModuleID = 0 AND @FilterByTags = 1
BEGIN
	DECLARE @FilterTagsTable TABLE (TagID int NOT NULL PRIMARY KEY);
	IF @FillterSettingsSource = 1 -- portal settings
		BEGIN
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		END
	ELSE
		BEGIN
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID;
		END
END
DECLARE @UserInRoles TABLE (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());

DECLARE @UserViewCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserEditCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can edit based on permissions
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter
DECLARE @FiltredByCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories that are filtred by module or portal

IF @UserID = -1
BEGIN	
	IF @Perm_ViewAllCategores = 1
	BEGIN
		INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE -- SELECTion by permission
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE -- by module
		BEGIN
		INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID AND rps.RoleID IS NULL;
		END
	END
END
ELSE IF @AdminOrSuperUser = 1
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE -- registrirani korisnik
BEGIN
	IF @Perm_ViewAllCategores = 1
	BEGIN
		INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpsc.[CategoryID]
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upsc.[CategoryID];
		END
	END
END

IF @OuterModuleID <> 0
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @OuterModuleID
			
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID;
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci ON pci.CategoryID = cl.CategoryID AND pci.PortalID = @PortalID
			
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID;
		END
		ELSE -- module
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @ModuleID
			
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID;
		END
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;			
		END
		ELSE -- module
		BEGIN
			WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
		END
	END
END

DECLARE @FilterBySocialGroup bit;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID int NOT NULL PRIMARY KEY);
IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				SELECT @FilterByAuthor = UserID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
			END
		END
	END
ELSE
BEGIN
-- ovaj dio odnosi se na filtriranje autora
	IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iu other modula
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID
	END
	ELSE
	BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			IF @FillterSettingsSource = 1 -- by portal
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID
			END
			ELSE -- by modul
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID
			END
		END
		ELSE IF @FilterByAuthor <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
		END
		ELSE IF @FilterByGroupID <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID
		END
	END
END
-- kategorije sa edit pravima
IF @AdminOrSuperUser = 1 OR @Perm_EditAllCategores = 1
BEGIN	
	INSERT INTO @UserEditCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	SET @EditPermission = 1;
END
ELSE
BEGIN
	IF @UserID = -1
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE -- by module
		BEGIN
		INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.RoleID IS NULL AND rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID;
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upatc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upatc.[CategoryID];
		END	
	END
	IF EXISTS(SELECT * FROM @UserEditCategories) BEGIN SET @EditPermission = 2; END
END

DECLARE @LocalizedCategories TABLE (ID int NOT NULL PRIMARY KEY, Name nvarchar(200), Position int, CategoryURL nvarchar(1500));
IF @LocaleCode <> ''''
BEGIN
	WITH LocCategories(ID, Name, Position, CategoryURL) AS (
		SELECT Cat.CategoryID AS ID, cl.Title AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = Cat.CategoryID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON uvc.CategoryID = cl.CategoryID WHERE Cat.PortalID = @PortalID AND cl.LocaleCode = @LocaleCode
	),
	NotLocCategories(ID, Name, Position, CategoryURL) AS (
		SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = Cat.CategoryID WHERE Cat.PortalID = @PortalID AND Cat.CategoryID NOT IN (SELECT ID FROM LocCategories)
	)
	INSERT INTO @LocalizedCategories SELECT ID, Name, Position, CategoryURL FROM (SELECT ID, Name, Position, CategoryURL FROM LocCategories UNION ALL SELECT ID, Name, Position, CategoryURL FROM NotLocCategories) AS ArticleCategories
END
ELSE
BEGIN
	INSERT INTO @LocalizedCategories SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = cat.CategoryID WHERE Cat.PortalID = @PortalID
END

IF @IsSocialInstance = 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID,StartDate) AS(
			SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID, StartDate FROM (SELECT n.*, ned.[StartDate], ROW_NUMBER() OVER (ORDER BY 
				CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
				CASE WHEN @OrderBy =''StartDate ASC'' THEN ned.[StartDate] END,
				CASE WHEN @OrderBy =''StartDate DESC'' THEN ned.[StartDate] END DESC) AS Kulike
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID WHERE n.ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
					LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
				WHERE na.PortalID=@PortalID
					AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND (
						(@DateRange = 0 AND ne.StartDate >= @StartDate) OR -- kada nije zadan date range, odnosi se na main news
						(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate)) -- odnosi se na date range zadanao iz outer modula	   
						) 
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
					LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
				WHERE na.PortalID=@PortalID
					AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND na.HasPermissions = 1
					AND (
					  (@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					  (@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					  ) 
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
					LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
				WHERE na.PortalID=@PortalID
					AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
						AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
					AND na.HasPermissions = 1
					AND (
					  (@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					  (@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					  ) 
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))	 
					AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
					)
			) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
				CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
				CASE WHEN @OrderBy =''StartDate ASC'' THEN StartDate END,
				CASE WHEN @OrderBy =''StartDate DESC'' THEN StartDate END DESC
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT *,
			CASE @EditPermission 
				WHEN 0 THEN 0
				WHEN 1 THEN 1
				WHEN 2 THEN
				CASE @EditOnlyAsOwner
					WHEN 0 THEN			
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END
						END  			
					WHEN 1 THEN
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END 
						END
				END
				WHEN 3 THEN
					CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
						CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
							THEN 1
							ELSE 0
							END
						END 
			END AS ''CanEdit'',
			(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
			 CASE Result.Active
				WHEN 1 THEN 0
				WHEN 0 THEN 1
			 END AS ''Published'',
			 CASE @UserCanApprove
				WHEN 0 THEN 0
				WHEN 1 THEN
					CASE Result.Approved
					 WHEN 1 THEN 0
					 WHEN 0 THEN
						 CASE Result.Active
							WHEN 1 THEN 1
							WHEN 0 THEN 0
						END
					END
			 END AS ''Approve''
			 FROM (
				SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription], ned.[StartDate],n.[CFGroupeID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID WHERE n.ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
				UNION ALL
				SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription], ned.[StartDate],n.[CFGroupeID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON fla.ArticleID = ned.ArticleID) As Result		 
			ORDER BY
			 CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
			 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
			 CASE WHEN @OrderBy =''StartDate ASC'' THEN StartDate END,
			 CASE WHEN @OrderBy =''StartDate DESC'' THEN StartDate END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		 FROM (SELECT
		 n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],
		 ned.[StartDate],n.[CFGroupeID], ROW_NUMBER() OVER (ORDER BY 
		 CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC, 
		 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
		 CASE WHEN @OrderBy =''StartDate ASC'' THEN ned.[StartDate] END,
		 CASE WHEN @OrderBy =''StartDate DESC'' THEN ned.[StartDate] END DESC) AS Kulike
		 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID WHERE n.ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 	
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
				AND((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 	
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
				AND((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))	 
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			)
		 ) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
			CASE WHEN @OrderBy =''StartDate ASC'' THEN StartDate END,
			CASE WHEN @OrderBy =''StartDate DESC'' THEN StartDate END DESC;
	END
END
ELSE IF @FilterBySocialGroup = 1
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID,StartDate) AS(
			SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID, StartDate FROM (SELECT n.*, ned.[StartDate], ROW_NUMBER() OVER (ORDER BY 
				CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
				CASE WHEN @OrderBy =''StartDate ASC'' THEN ned.[StartDate] END,
				CASE WHEN @OrderBy =''StartDate DESC'' THEN ned.[StartDate] END DESC) AS Kulike
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID WHERE n.ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
					LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
				WHERE na.PortalID=@PortalID
					AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND ne.StartDate >= @StartDate
					AND((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND((@DateRange = 0 AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
					AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
					AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
					LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
				WHERE na.PortalID=@PortalID
					AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND na.HasPermissions = 1
					AND (
						(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
						(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
						) 
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
					AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
					LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
				WHERE na.PortalID=@PortalID
					AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
						))
					AND na.HasPermissions = 1
					AND (
						(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
						(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
						) 
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
					AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
					)
			) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
				CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
				CASE WHEN @OrderBy =''StartDate ASC'' THEN StartDate END,
				CASE WHEN @OrderBy =''StartDate DESC'' THEN StartDate END DESC
			),
			FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
				SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
			)
			SELECT *,
				CASE @EditPermission 
					WHEN 0 THEN 0
					WHEN 1 THEN 1
					WHEN 2 THEN
					CASE @EditOnlyAsOwner
						WHEN 0 THEN			
							CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
								THEN 1
								ELSE
									CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
									THEN 1
									ELSE
										CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
											THEN 1
											ELSE 0
										END
									END
							END  			
						WHEN 1 THEN
							CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
								THEN 1
								ELSE
									CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
									THEN 1
									ELSE
										CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
											THEN 1
											ELSE 0
										END
									END 
							END
					END
					WHEN 3 THEN
						CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
							CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
								THEN 1
								ELSE 0
								END
							END 
				END AS ''CanEdit'',
				(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
				 CASE Result.Active
					WHEN 1 THEN 0
					WHEN 0 THEN 1
				 END AS ''Published'',
				 CASE @UserCanApprove
					WHEN 0 THEN 0
					WHEN 1 THEN
						CASE Result.Approved
						 WHEN 1 THEN 0
						 WHEN 0 THEN
							 CASE Result.Active
								WHEN 1 THEN 1
								WHEN 0 THEN 0
							END
						END
				 END AS ''Approve''
				 FROM (
					SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
						,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
						,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
						,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
						,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
						,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription], ned.[StartDate],n.[CFGroupeID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID WHERE n.ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
					UNION ALL
					SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
						,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
						,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
						,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
						,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
						,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription], ned.[StartDate],n.[CFGroupeID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON fla.ArticleID = ned.ArticleID) As Result		 
				ORDER BY
					CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
					CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
					CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
					CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
					CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
					CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
					CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
					CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
					CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
					CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
					CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
					CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
					CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
					CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
					CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
					CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
					CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
					CASE WHEN @OrderBy =''StartDate ASC'' THEN StartDate END,
					CASE WHEN @OrderBy =''StartDate DESC'' THEN StartDate END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		FROM (SELECT
		n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],
		 ned.[StartDate],n.[CFGroupeID], ROW_NUMBER() OVER (ORDER BY 
		CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
		CASE WHEN @OrderBy =''StartDate ASC'' THEN ned.[StartDate] END,
		CASE WHEN @OrderBy =''StartDate DESC'' THEN ned.[StartDate] END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID WHERE n.ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 	
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
				) 
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 	
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 	
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			)
		 ) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
		 CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
		 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
		 CASE WHEN @OrderBy =''StartDate ASC'' THEN StartDate END,
		 CASE WHEN @OrderBy =''StartDate DESC'' THEN StartDate END DESC;
	END
END
ELSE IF @FilterByDNNUserID <> 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID,StartDate) AS(
			SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID, StartDate FROM (SELECT n.*, ned.[StartDate], ROW_NUMBER() OVER (ORDER BY 
				CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
				CASE WHEN @OrderBy =''StartDate ASC'' THEN ned.[StartDate] END,
				CASE WHEN @OrderBy =''StartDate DESC'' THEN ned.[StartDate] END DESC) AS Kulike
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID WHERE n.ArticleID IN(
					SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
						INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
						LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
					WHERE na.PortalID=@PortalID
						AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
						AND na.HasPermissions = 0
						AND (
							(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
							(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
							) 
						AND((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
						AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
						AND na.UserID = @FilterByDNNUserID
						AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
						AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
					UNION ALL
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
						INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
						LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
					WHERE na.PortalID=@PortalID
						AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
							AND aup.Show = 1  AND ((@UserCanApprove = 1) OR (na.Approved=1))AND (na.Active=1 OR na.UserID=@UserID)
						))
						AND na.HasPermissions = 1
						AND (
							(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
							(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
							) 
						AND((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
						AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
						AND na.UserID = @FilterByDNNUserID
						AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
						AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
					UNION
					SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
						INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
						LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	
					WHERE na.PortalID=@PortalID
						AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
							AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
						))
						AND na.HasPermissions = 1
						AND (
							(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
							(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
							) 
						AND((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
						AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
						AND na.UserID = @FilterByDNNUserID
						AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
						AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				)
			 ) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
				CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
				CASE WHEN @OrderBy =''StartDate ASC'' THEN StartDate END,
				CASE WHEN @OrderBy =''StartDate DESC'' THEN StartDate END DESC
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT *,
			CASE @EditPermission 
				WHEN 0 THEN 0
				WHEN 1 THEN 1
				WHEN 2 THEN
				CASE @EditOnlyAsOwner
					WHEN 0 THEN			
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END
						END  			
					WHEN 1 THEN
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END 
						END
				END
				WHEN 3 THEN
					CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
						CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
							THEN 1
							ELSE 0
							END
						END 
			END AS ''CanEdit'',
			(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
			 CASE Result.Active
				WHEN 1 THEN 0
				WHEN 0 THEN 1
			 END AS ''Published'',
			 CASE @UserCanApprove
				WHEN 0 THEN 0
				WHEN 1 THEN
					CASE Result.Approved
					 WHEN 1 THEN 0
					 WHEN 0 THEN
						 CASE Result.Active
							WHEN 1 THEN 1
							WHEN 0 THEN 0
						END
					END
			 END AS ''Approve''
			 FROM (
				SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription], ned.[StartDate],n.[CFGroupeID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID WHERE n.ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
				UNION ALL
				SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription], ned.[StartDate],n.[CFGroupeID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON fla.ArticleID = ned.ArticleID) As Result		 
			ORDER BY
				CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
				CASE WHEN @OrderBy =''StartDate ASC'' THEN StartDate END,
				CASE WHEN @OrderBy =''StartDate DESC'' THEN StartDate END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		FROM (SELECT
		n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],
		 ned.[StartDate],n.[CFGroupeID], ROW_NUMBER() OVER (ORDER BY 
		CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
		CASE WHEN @OrderBy =''StartDate ASC'' THEN ned.[StartDate] END,
		CASE WHEN @OrderBy =''StartDate DESC'' THEN ned.[StartDate] END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID WHERE n.ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 	
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
				AND((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 	
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
				AND((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 	
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND (
					(@DateRange = 0 AND ne.StartDate >= @StartDate) OR
					(@DateRange = 1 AND (ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate))  
					) 
				AND((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
			)
		 ) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			 CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
			 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC,
			 CASE WHEN @OrderBy =''StartDate ASC'' THEN StartDate END,
			 CASE WHEN @OrderBy =''StartDate DESC'' THEN StartDate END DESC;
	END
END' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplayByDateWithEventsRange]    Script Date: 07/18/2013 22:05:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplayByDateWithEventsRange]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplayByDateWithEventsRange]
	@ViewType tinyint = 0, -- 0 - View, 1 - Editor
	@PortalID int, -- current Portal
	@ModuleID int, -- current Module, portal sharing isto sadrzi dobre kategorije, auto add i setingsi su snimljeni kod tog modula
	@UserID int,
	@CurrentDate Datetime, -- = GetUTCDate,
	@OrderBy nvarchar(20) = ''PublishDate DESC'',
	@ItemsFrom int = 1,
	@ItemsTo int = 5,
	@FromDate DateTime = ''2012-01-01 00:00:00'', -- ovo ne treba za only events
	@ToDate DateTime = ''2012-01-01 00:00:00'', -- ovo ne treba za only events
	/* od tud ide filter */
	@Featured bit = 0,
	@ShowAllAuthors bit = 1, -- gleda se filtriranje autora po modulu ili portalu
	@FilterByAuthor int = 0,
	@FilterByGroupID int = 0,
--	@FilterByTags bit = 0,
	/*@FilterByArticles bit = 0,*/ -- ovoga nema tu !!
	@FilterByDNNUserID int = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID int = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@EditOnlyAsOwner bit = 0, -- news settings
	@UserCanApprove bit = 0, -- news settings
	@LocaleCode nvarchar(20) = '''',
	@IsSocialInstance bit = 0,	
	--@FirstOrderBy nvarchar(20) = '''',--''Featured DESC'', -- featured articles on top	
	@Perm_ViewAllCategores bit = 0, -- permission settings View all categories
	@Perm_EditAllCategores bit = 0, -- permission settings Edit all categories
	@AdminOrSuperUser bit = 0,
	@CategoryFilterType tinyint = 1, -- 0 All categories, 1 - SELECTion, 2 - AutoAdd
	@PermissionSettingsSource bit = 0, -- 0 portal, 1 module
	@FillterSettingsSource bit = 0, -- 0 portal, 1 module
	@OuterModuleID int = 0,
	@HideUnlocalizedItems bit = 0
AS
SET NOCOUNT ON;
DECLARE @EditPermission tinyint;
SET @EditPermission = 0;
DECLARE @UserInRoles TABLE (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());

DECLARE @UserViewCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserEditCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can edit based on permissions
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter
DECLARE @FiltredByCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories that are filtred by module or portal

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
	END
	ELSE -- by module
	BEGIN
	INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID AND rps.RoleID IS NULL;
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
	END
	ELSE -- by module
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upsc.[CategoryID];
	END
END

IF @OuterModuleID <> 0
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @OuterModuleID
			
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID;
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci ON pci.CategoryID = cl.CategoryID AND pci.PortalID = @PortalID
			
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID;
		END
		ELSE -- module
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @ModuleID
			
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID;
		END
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;			
		END
		ELSE -- module
		BEGIN
			WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
		END
	END
END

DECLARE @FilterBySocialGroup bit;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID int NOT NULL PRIMARY KEY);
IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				SELECT @FilterByAuthor = UserID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
			END
		END
	END
ELSE
BEGIN
-- ovaj dio odnosi se na filtriranje autora
	IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iz other modula
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID
	END
	ELSE
	BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			IF @FillterSettingsSource = 1 -- by portal
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID
			END
			ELSE -- by modul
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID
			END
		END
		ELSE IF @FilterByAuthor <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
		END
		ELSE IF @FilterByGroupID <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID
		END
	END
END
-- kategorije sa edit pravima
IF @AdminOrSuperUser = 1 OR @Perm_EditAllCategores = 1
BEGIN	
	INSERT INTO @UserEditCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	SET @EditPermission = 1;
END
ELSE
BEGIN
	IF @UserID = -1
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE -- by module
		BEGIN
		INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.RoleID IS NULL AND rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID;
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upatc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upatc.[CategoryID];
		END	
	END
	IF EXISTS(SELECT * FROM @UserEditCategories) BEGIN SET @EditPermission = 2; END
END

DECLARE @LocalizedCategories TABLE (ID int NOT NULL PRIMARY KEY, Name nvarchar(200), Position int, CategoryURL nvarchar(1500));
IF @LocaleCode <> ''''
BEGIN
	WITH LocCategories(ID, Name, Position, CategoryURL) AS (
		SELECT Cat.CategoryID AS ID, cl.Title AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories  AS uvc ON uvc.CategoryID = Cat.CategoryID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON uvc.CategoryID = cl.CategoryID WHERE Cat.PortalID = @PortalID AND cl.LocaleCode = @LocaleCode
	),
	NotLocCategories(ID, Name, Position, CategoryURL) AS (
		SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = Cat.CategoryID WHERE Cat.PortalID = @PortalID AND Cat.CategoryID NOT IN (SELECT ID FROM LocCategories)
	)
	INSERT INTO @LocalizedCategories SELECT ID, Name, Position, CategoryURL FROM (SELECT ID, Name, Position, CategoryURL FROM LocCategories UNION ALL SELECT ID, Name, Position, CategoryURL FROM NotLocCategories) AS ArticleCategories
END
ELSE
BEGIN
	INSERT INTO @LocalizedCategories SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories  AS uvc ON uvc.CategoryID = cat.CategoryID WHERE Cat.PortalID = @PortalID
END

IF @IsSocialInstance = 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
			SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY 
				 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 0
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
					AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			    WHERE na.PortalID=@PortalID
			    	AND na.HasPermissions = 0
			    	AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
			    	AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
					AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
					AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1  AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
					AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1))AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
					AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
						AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))	 
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
					AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
						AND (na.Active=1 OR na.UserID=@UserID)AND arp.Show = 1AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			)
			) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
				 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
	 	 FROM (
			 SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
				   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
			 UNION ALL
			 SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription],n.[CFGroupeID]
			  FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID) As Result
	  ORDER BY
		 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		 FROM (SELECT
		  n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID], ROW_NUMBER() OVER (ORDER BY 
		 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))	 
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			)
		 ) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
		 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
END
ELSE IF @FilterBySocialGroup = 1
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
			SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY 
				 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 0
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
					AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 0
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
					AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
					AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1  AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
					AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
					AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1)) 
						AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1				
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
					AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
						AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
					AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				)
			 ) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
				 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC
			),
			FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
				SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
			)
			SELECT *,
				CASE @EditPermission 
					WHEN 0 THEN 0
					WHEN 1 THEN 1
					WHEN 2 THEN
					CASE @EditOnlyAsOwner
						WHEN 0 THEN			
							CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
								THEN 1
								ELSE
									CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
									THEN 1
									ELSE
										CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
											THEN 1
											ELSE 0
										END
									END
							END  			
						WHEN 1 THEN
							CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
								THEN 1
								ELSE
									CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
									THEN 1
									ELSE
										CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
											THEN 1
											ELSE 0
										END
									END 
							END
					END
					WHEN 3 THEN
						CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
							CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
								THEN 1
								ELSE 0
								END
							END 
				END AS ''CanEdit'',
				(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
				 CASE Result.Active
					WHEN 1 THEN 0
					WHEN 0 THEN 1
				 END AS ''Published'',
				 CASE @UserCanApprove
					WHEN 0 THEN 0
					WHEN 1 THEN
						CASE Result.Approved
						 WHEN 1 THEN 0
						 WHEN 0 THEN
							 CASE Result.Active
								WHEN 1 THEN 1
								WHEN 0 THEN 0
							END
						END
				 END AS ''Approve''
	 			 FROM (
					 SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
						  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
						  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
						  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
						  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
						  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
						   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
					 UNION ALL
					 SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
						  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
						  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
						  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
						  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
						  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription],n.[CFGroupeID]
					  FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID) As Result
				ORDER BY
					CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
					CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
					CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
					CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
					CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
					CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
					CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
					CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
					CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
					CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
					CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
					CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
					CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
					CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
					CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
					CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		 FROM (SELECT 
		  n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID], ROW_NUMBER() OVER (ORDER BY 
			 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
			 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			    WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 0
					AND na.HideDefaultLocale = 0
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
					AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 0
					AND na.HideDefaultLocale = 0
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
					AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
					AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				UNION
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
					AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
					AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
						AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
						AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				)
			) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
END
ELSE IF @FilterByDNNUserID <> 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
		SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY 
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND na.HasPermissions = 1
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			)
		 ) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC
	),
	FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
		SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
	)
	SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
			FROM (
				 SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
				   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
			 UNION ALL
			 SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription],n.[CFGroupeID]
			  FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID) As Result
		ORDER BY
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
	ELSE
	BEGIN
	SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		 FROM (SELECT
		   n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID], ROW_NUMBER() OVER (ORDER BY 
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			    WHERE na.PortalID=@PortalID
					AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.HideDefaultLocale = 0
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
					AND na.UserID = @FilterByDNNUserID
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			    WHERE na.PortalID=@PortalID
					AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
					AND na.HasPermissions = 0
					AND na.HideDefaultLocale = 0
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND na.UserID = @FilterByDNNUserID
				UNION ALL
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
					AND na.UserID = @FilterByDNNUserID
				UNION
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND na.UserID = @FilterByDNNUserID
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
						AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND na.PublishDate >= @FromDate AND na.PublishDate <= @ToDate AND ExpireDate >= @CurrentDate
					AND na.UserID = @FilterByDNNUserID
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
					AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate
					AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
						AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
					AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
					AND na.UserID = @FilterByDNNUserID
				)
			) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
END' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplay]    Script Date: 07/18/2013 22:05:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplay]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForListDisplay]
	@ViewType tinyint = 0, -- 0 - View, 1 - Editor
	@PortalID int, -- current Portal
	@ModuleID int, -- current Module, portal sharing isto sadrzi dobre kategorije, auto add i setingsi su snimljeni kod tog modula
	@UserID int,
	@CurrentDate Datetime, -- = GetUTCDate,
	@OrderBy nvarchar(20) = ''PublishDate DESC'',
	@ItemsFrom int = 1,
	@ItemsTo int = 5,
	@DateRange bit = 0,
	@FromDate DateTime = ''2012-01-01 00:00:00'',
	@ToDate DateTime = ''2012-01-01 00:00:00'',
	/* od tud ide filter */
	@OnlyOneCategory int = 0, -- used for category menu or vhen need to filter by one category
	@Featured bit = 0,
	@ShowAllAuthors bit = 1, -- gleda se filtriranje autora po modulu ili portalu
	@FilterByAuthor int = 0, -- ako se selektiran jedan autor
	@FilterByGroupID int = 0, -- ako je selektirana grupa
	@FilterByTags bit = 0,
	@FilterByArticles bit = 0,
	@FilterByDNNUserID int = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID int = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@EditOnlyAsOwner bit = 0, -- news settings
	@UserCanApprove bit = 0, -- news settings
	@LocaleCode nvarchar(20) = '''',
	@IsSocialInstance bit = 0,	
	@FirstOrderBy nvarchar(20) = '''',--''Featured DESC'', -- featured articles on top	
	@Perm_ViewAllCategores bit = 0, -- permission settings View all categories
	@Perm_EditAllCategores bit = 0, -- permission settings Edit all categories
	@AdminOrSuperUser bit = 0,
	@CategoryFilterType tinyint = 1, -- 0 All categories, 1 - SELECTion, 2 - AutoAdd
	@PermissionSettingsSource bit = 1, -- 1 portal, 0 module
	@FillterSettingsSource bit = 1, -- 1 portal, 0 module	
	@OuterModuleID int = 0,
	@HideUnlocalizedItems bit = 0,
	@NewsFilterCategories nvarchar(1000) = '''',
	@NewsFilterAuthors nvarchar(1000) = '''',
	@NewsFilterGroups nvarchar(1000) = ''''
AS
SET NOCOUNT ON;
DECLARE @EditPermission tinyint;
SET @EditPermission = 0;

IF @NewsFilterCategories = ''''
BEGIN
	IF @OuterModuleID = 0 AND @FilterByArticles = 1
	BEGIN
		DECLARE @FilterArticlesTable TABLE (ArticleID int NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1 -- -- portal settings
			BEGIN
				INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
			END
		ELSE
			BEGIN
				INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID;
			END
	END
	-- temp TABLE contains list of TagIDs to filter -> @FilterTagsTable
	IF @OuterModuleID = 0 AND @FilterByTags = 1
	BEGIN
		DECLARE @FilterTagsTable TABLE (TagID int NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1 -- portal settings
			BEGIN
				INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
			END
		ELSE
			BEGIN
				INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID;
			END
	END

END

DECLARE @UserInRoles TABLE (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());

DECLARE @UserViewCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserEditCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY); -- all categories which user can edit based on permissions
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID INT NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter
DECLARE @FiltredByCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY); -- all categories that are filtred by module or portal

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
	END
	ELSE -- by module
	BEGIN
	INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID AND rps.RoleID IS NULL;
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
	END
	ELSE -- by module
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upsc.[CategoryID];
	END
END

IF @NewsFilterCategories != ''''
BEGIN
	INSERT INTO @FiltredByCategories SELECT * FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories)
	INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.[CategoryID] FROM @UserViewCategories as uvc INNER JOIN @FiltredByCategories as fbc ON uvc.CategoryID = fbc.CategoryID;
END
ELSE
BEGIN
	IF @OnlyOneCategory <> 0 -- filtrira se po jednoj kategoriji
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories WHERE CategoryID = @OnlyOneCategory;
		INSERT INTO @FiltredByCategories SELECT @OnlyOneCategory;
	END
	ELSE IF @OuterModuleID <> 0
	BEGIN
		IF @CategoryFilterType = 0 -- 0 All categories
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		END
		ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @OuterModuleID
				
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID;
		END
		ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
		BEGIN
			WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
		END
	END
	ELSE
	BEGIN
		IF @CategoryFilterType = 0 -- 0 All categories
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		END
		ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
		BEGIN
			IF @FillterSettingsSource = 1 -- portal
			BEGIN
				INSERT INTO @UserViewCategoriesWithFilter 
				SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci ON pci.CategoryID = cl.CategoryID AND pci.PortalID = @PortalID
				
				INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID;
			END
			ELSE -- module
			BEGIN
				INSERT INTO @UserViewCategoriesWithFilter 
				SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @ModuleID
				
				INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID;
			END
		END
		ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
		BEGIN
			IF @FillterSettingsSource = 1 -- portal
			BEGIN
				WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;			
			END
			ELSE -- module
			BEGIN
				WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
			END
		END
	END
END

DECLARE @FilterBySocialGroup bit;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID int NOT NULL PRIMARY KEY);
IF @NewsFilterAuthors = '''' AND @NewsFilterGroups = ''''
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				SELECT @FilterByAuthor = UserID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
			END
		END
	END
	ELSE
	BEGIN
-- ovaj dio odnosi se na filtriranje autora
	IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iz other modula
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID
	END
	ELSE
	BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			IF @FillterSettingsSource = 1 -- by portal
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID
			END
			ELSE -- by modul
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID
			END
		END
		ELSE IF @FilterByAuthor <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
		END
		ELSE IF @FilterByGroupID <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID
		END
	END
END
END
ELSE
BEGIN
-- treba selektirati sve autore ili grupe !!!
	SET @FilterAuthorOrAuthors = 1;
	IF @NewsFilterAuthors <> '''' AND @NewsFilterGroups <> ''''
	BEGIN
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID WHERE PortalID = @PortalID
		UNION
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID = @PortalID
	END
	ELSE IF @NewsFilterAuthors <> ''''
	BEGIN
		INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID WHERE PortalID = @PortalID 
	END
	ELSE IF @NewsFilterGroups <> ''''
	BEGIN
		INSERT INTO @TempAuthorsIDList
		SELECT ap.[UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID = @PortalID
	END
END
-- kategorije sa edit pravima
IF @AdminOrSuperUser = 1 OR @Perm_EditAllCategores = 1
BEGIN	
	INSERT INTO @UserEditCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	SET @EditPermission = 1;
END
ELSE
BEGIN
	IF @UserID = -1
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE -- by module
		BEGIN
		INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.RoleID IS NULL AND rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID;
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upatc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upatc.[CategoryID];
		END	
	END
	IF EXISTS(SELECT * FROM @UserEditCategories) BEGIN SET @EditPermission = 2; END
END

DECLARE @LocalizedCategories TABLE (ID int NOT NULL PRIMARY KEY, Name nvarchar(200), Position int, CategoryURL nvarchar(1500));
IF @LocaleCode <> ''''
BEGIN
	WITH LocCategories(ID, Name, Position, CategoryURL) AS (
		SELECT Cat.CategoryID AS ID, cl.Title AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = Cat.CategoryID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON uvc.CategoryID = cl.CategoryID WHERE Cat.PortalID = @PortalID AND cl.LocaleCode = @LocaleCode
	),
	NotLocCategories(ID, Name, Position, CategoryURL) AS (
		SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = Cat.CategoryID WHERE Cat.PortalID = @PortalID AND Cat.CategoryID NOT IN (SELECT ID FROM LocCategories)
	)
	INSERT INTO @LocalizedCategories SELECT ID, Name, Position, CategoryURL FROM (SELECT ID, Name, Position, CategoryURL FROM LocCategories UNION ALL SELECT ID, Name, Position, CategoryURL FROM NotLocCategories) AS ArticleCategories
END
ELSE
BEGIN
	INSERT INTO @LocalizedCategories SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = cat.CategoryID WHERE Cat.PortalID = @PortalID
END

IF @IsSocialInstance = 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
		SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY
		CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID	
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID  		
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active = 1 OR na.UserID=@UserID)))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID			 
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	 	 
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active = 1 OR na.UserID=@UserID)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID		  
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 	 				  
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))	 
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC
	),
	FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
		SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
	)
	SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		 FROM (
			 SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
				   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
			 UNION ALL
			 SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription],n.[CFGroupeID]
			  FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID) As Result
		ORDER BY
			CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		 FROM (SELECT
		  n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID], ROW_NUMBER() OVER (ORDER BY 
		CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID	
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID 	 		
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active = 1 OR na.UserID=@UserID)))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID			 
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID 	 		 
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active = 1 OR na.UserID=@UserID)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID		  
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID	 		  
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))	 
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
END
ELSE IF @FilterBySocialGroup = 1
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
		SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY 
		CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId, @UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
  				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
  				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
  				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 		  	
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active = 1 OR na.UserID=@UserID)))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID	 		  		
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active = 1 OR na.UserID=@UserID)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 	
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID	 		  	
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0)) 
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT *,
			CASE @EditPermission 
				WHEN 0 THEN 0
				WHEN 1 THEN 1
				WHEN 2 THEN
				CASE @EditOnlyAsOwner
					WHEN 0 THEN			
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END
						END  			
					WHEN 1 THEN
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END 
						END
				END
				WHEN 3 THEN
					CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
						CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
							THEN 1
							ELSE 0
							END
						END 
			END AS ''CanEdit'',
			(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
			 CASE Result.Active
				WHEN 1 THEN 0
				WHEN 0 THEN 1
			 END AS ''Published'',
			 CASE @UserCanApprove
				WHEN 0 THEN 0
				WHEN 1 THEN
					CASE Result.Approved
					 WHEN 1 THEN 0
					 WHEN 0 THEN
						 CASE Result.Active
							WHEN 1 THEN 1
							WHEN 0 THEN 0
						END
					END
			 END AS ''Approve''
			 FROM ( 
				 SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
					   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
				 UNION ALL
				 SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription],n.[CFGroupeID]
				  FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID) As Result
			ORDER BY
				CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		 FROM (SELECT
		  n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID], ROW_NUMBER() OVER (ORDER BY 
		 CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
		 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId, @UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
  				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
  				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID	 		  	 	
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active = 1 OR na.UserID=@UserID)))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID	 		  	 	 	
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active = 1 OR na.UserID=@UserID)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID	 		  	 	 	 	
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0)) 
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
END
ELSE IF @FilterByDNNUserID <> 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
		SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY
		CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC, 
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID	
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID     		  	 	 	 	 	
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.UserID = @FilterByDNNUserID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1)AND (na.Active = 1 OR na.UserID=@UserID)))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID	 		  	 	 	 		
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.UserID = @FilterByDNNUserID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active = 1 OR na.UserID=@UserID)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID	 		  	 	 	 		 	
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.UserID = @FilterByDNNUserID 
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT *,
			CASE @EditPermission 
				WHEN 0 THEN 0
				WHEN 1 THEN 1
				WHEN 2 THEN
				CASE @EditOnlyAsOwner
					WHEN 0 THEN			
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END
						END  			
					WHEN 1 THEN
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END 
						END
				END
				WHEN 3 THEN
					CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
						CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
							THEN 1
							ELSE 0
							END
						END 
			END AS ''CanEdit'',
			(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
			 CASE Result.Active
				WHEN 1 THEN 0
				WHEN 0 THEN 1
			 END AS ''Published'',
			 CASE @UserCanApprove
				WHEN 0 THEN 0
				WHEN 1 THEN
					CASE Result.Approved
					 WHEN 1 THEN 0
					 WHEN 0 THEN
						 CASE Result.Active
							WHEN 1 THEN 1
							WHEN 0 THEN 0
						END
					END
			 END AS ''Approve''
			 FROM (
				 SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
					   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
				 UNION ALL
				 SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					  ,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					  ,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription],n.[CFGroupeID]
				  FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID) As Result
			ORDER BY
				CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		 FROM (SELECT
		  n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID], ROW_NUMBER() OVER (ORDER BY 
		 CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
		 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
  				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID 
  				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID	 		  	 	 	 		 		
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND na.UserID = @FilterByDNNUserID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active = 1 OR na.UserID=@UserID)))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID	 		  	 	 	 		 			
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active = 1 OR na.UserID=@UserID)
				))
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.UserID = @FilterByDNNUserID
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID
				LEFT OUTER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
				LEFT OUTER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID	 		  	 	 	 		 			 	
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND na.UserID = @FilterByDNNUserID 
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
				AND ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 0))
				AND ((@DateRange = 0 AND (na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate)) OR (@DateRange = 1 AND ((PublishDate >= @FromDate AND PublishDate <= @ToDate) AND (ExpireDate >= @CurrentDate))))
				AND ((@FilterByTags = 1 AND fbt.TagID IS NOT NULL) OR (@FilterByTags = 0))
				AND ((@FilterByArticles = 1 AND fba.ArticleID IS NOT NULL) OR (@FilterByArticles = 0))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @FirstOrderBy =''Featured DESC'' THEN Featured END DESC,
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
END' 
END
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsByTagID]    Script Date: 07/18/2013 22:05:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsByTagID]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsByTagID]
	@ViewType tinyint = 0, -- 0 - View, 1 - Editor
	@PortalID int, -- current Portal
	@ModuleID int, -- current Module(news), portal sharing isto sadrzi dobre kategorije, auto add i setingsi su snimljeni kod tog modula
	@UserID int,
	@CurrentDate Datetime, -- = GetUTCDate,
	@OrderBy nvarchar(20) = ''PublishDate DESC'',
	@ItemsFrom int = 1,
	@ItemsTo int = 5,

	/* od tud ide filter */
	@ShowAllAuthors bit = 1, -- gleda se filtriranje autora po modulu ili portalu
	@FilterByAuthor int = 0, -- ako se selektiran jedan autor
	@FilterByGroupID int = 0, -- ako je selektirana grupa
	
	@FilterByDNNUserID int = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID int = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@EditOnlyAsOwner bit = 0, -- news settings
	@UserCanApprove bit = 0, -- news settings
	@LocaleCode nvarchar(20) = '''',
	@IsSocialInstance bit = 0,	

	@Perm_ViewAllCategores bit = 0, -- permission settings View all categories
	@Perm_EditAllCategores bit = 0, -- permission settings Edit all categories
	@AdminOrSuperUser bit = 0,
	@CategoryFilterType tinyint = 1, -- 0 All categories, 1 - SELECTion, 2 - AutoAdd
	@PermissionSettingsSource bit = 1, -- 1 portal, 0 module
	@FillterSettingsSource bit = 1, -- 1 portal, 0 module	
	@OuterModuleID int = 0,
	@TagID int = 0,
	@HideUnlocalizedItems bit = 0
AS
SET NOCOUNT ON;
DECLARE @EditPermission tinyint;
SET @EditPermission = 0;
DECLARE @UserInRoles TABLE (RoleID int NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());
DECLARE @UserViewCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserEditCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can edit based on permissions
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter
DECLARE @FiltredByCategories TABLE (CategoryID int NOT NULL PRIMARY KEY); -- all categories that are filtred by module or portal

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
	END
	ELSE -- by module
	BEGIN
	INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID AND rps.RoleID IS NULL;
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
	END
	ELSE -- by module
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upsc.[CategoryID];
	END
END

IF @OuterModuleID <> 0
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @OuterModuleID
			
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID;
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
	END
END
ELSE -- znaci da je skip filter, nema filtera po autorima ili kategorijama
BEGIN
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
	INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
DECLARE @FilterBySocialGroup bit;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors bit;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID int NOT NULL PRIMARY KEY);
IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				SELECT @FilterByAuthor = UserID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
			END
		END
	END
ELSE
BEGIN
-- ovaj dio odnosi se na filtriranje autora
	IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iz other modula
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID
	END
	ELSE
	BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			IF @FillterSettingsSource = 1 -- by portal
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID
			END
			ELSE -- by modul
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID
			END
		END
		ELSE IF @FilterByAuthor <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
		END
		ELSE IF @FilterByGroupID <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID
		END
	END
END
-- kategorije sa edit pravima
IF @AdminOrSuperUser = 1 OR @Perm_EditAllCategores = 1
BEGIN	
	INSERT INTO @UserEditCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	SET @EditPermission = 1;
END
ELSE
BEGIN
	IF @UserID = -1
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE -- by module
		BEGIN
		INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.RoleID IS NULL AND rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID;
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upatc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upatc.[CategoryID];
		END	
	END
	IF EXISTS(SELECT * FROM @UserEditCategories) BEGIN SET @EditPermission = 2; END
END

DECLARE @LocalizedCategories TABLE (ID int NOT NULL PRIMARY KEY, Name nvarchar(200), Position int, CategoryURL nvarchar(1500));
IF @LocaleCode <> ''''
BEGIN
	WITH LocCategories(ID, Name, Position, CategoryURL) AS (
		SELECT Cat.CategoryID AS ID, cl.Title AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = Cat.CategoryID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON uvc.CategoryID = cl.CategoryID WHERE Cat.PortalID = @PortalID AND cl.LocaleCode = @LocaleCode
	),
	NotLocCategories(ID, Name, Position, CategoryURL) AS (
		SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = Cat.CategoryID WHERE Cat.PortalID = @PortalID AND Cat.CategoryID NOT IN (SELECT ID FROM LocCategories)
	)
	INSERT INTO @LocalizedCategories SELECT ID, Name, Position, CategoryURL FROM (SELECT ID, Name, Position, CategoryURL FROM LocCategories UNION ALL SELECT ID, Name, Position, CategoryURL FROM NotLocCategories) AS ArticleCategories
END
ELSE
BEGIN
	INSERT INTO @LocalizedCategories SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = cat.CategoryID WHERE Cat.PortalID = @PortalID
END

IF @IsSocialInstance = 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
		SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY 
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			)
		 ) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC
	),
	FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
		SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
	)
	SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		 FROM (
			SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
			UNION ALL
			SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
				,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
				,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
				,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
				,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription],n.[CFGroupeID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID) As Result
		 ORDER BY
			 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		 END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		 FROM (SELECT
		 n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID], ROW_NUMBER() OVER (ORDER BY 
		 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
END
ELSE IF @FilterBySocialGroup = 1
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
		SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY 
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND na.HasPermissions = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT *,
			CASE @EditPermission 
				WHEN 0 THEN 0
				WHEN 1 THEN 1
				WHEN 2 THEN
				CASE @EditOnlyAsOwner
					WHEN 0 THEN			
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END
						END  			
					WHEN 1 THEN
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END 
						END
				END
				WHEN 3 THEN
					CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
						CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
							THEN 1
							ELSE 0
							END
						END 
			END AS ''CanEdit'',
			(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
			 CASE Result.Active
				WHEN 1 THEN 0
				WHEN 0 THEN 1
			 END AS ''Published'',
			 CASE @UserCanApprove
				WHEN 0 THEN 0
				WHEN 1 THEN
					CASE Result.Approved
					 WHEN 1 THEN 0
					 WHEN 0 THEN
						 CASE Result.Active
							WHEN 1 THEN 1
							WHEN 0 THEN 0
						END
					END
			 END AS ''Approve''
			 FROM (
				SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
				UNION ALL
				SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription],n.[CFGroupeID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID) As Result
			ORDER BY
				CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
				CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
				CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
				CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
				CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
				CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
				CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
				CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
				CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
				CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
				CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
				CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
				CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		 END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		 FROM (SELECT
		   n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID], ROW_NUMBER() OVER (ORDER BY 
		 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor) OR (@FilterAuthorOrAuthors = 0))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
END
ELSE IF @FilterByDNNUserID <> 0
BEGIN
	IF @LocaleCode <> ''''
	BEGIN
		WITH FinalArticleIDsSet (ArticleID) AS(
		SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID FROM (SELECT *, ROW_NUMBER() OVER (ORDER BY 
		CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
				AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC
		),
		FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
		)
		SELECT *,
			CASE @EditPermission 
				WHEN 0 THEN 0
				WHEN 1 THEN 1
				WHEN 2 THEN
				CASE @EditOnlyAsOwner
					WHEN 0 THEN			
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END
						END  			
					WHEN 1 THEN
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END 
						END
				END
				WHEN 3 THEN
					CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
						CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
							THEN 1
							ELSE 0
							END
						END 
			END AS ''CanEdit'',
			(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
			 CASE Result.Active
				WHEN 1 THEN 0
				WHEN 0 THEN 1
			 END AS ''Published'',
			 CASE @UserCanApprove
				WHEN 0 THEN 0
				WHEN 1 THEN
					CASE Result.Approved
					 WHEN 1 THEN 0
					 WHEN 0 THEN
						 CASE Result.Active
							WHEN 1 THEN 1
							WHEN 0 THEN 0
						END
					END
			 END AS ''Approve''
			 FROM (
				SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
				UNION ALL
				SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription],n.[CFGroupeID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID) As Result
		  ORDER BY
			 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
	ELSE
	BEGIN
		SELECT *,
		CASE @EditPermission 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		 END AS ''CanEdit'',
		(SELECT cat.ID, cat.Name, cat.CategoryURL FROM @LocalizedCategories AS Cat INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON c.CategoryID = Cat.ID WHERE c.ArticleID = Result.ArticleID ORDER BY Position FOR XML AUTO, ROOT(''root'')) AS ''CatToShow'',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS ''Published'',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS ''Approve''
		 FROM (SELECT
		  n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		  ,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		  ,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		  ,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		  ,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		  ,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID], ROW_NUMBER() OVER (ORDER BY 
		 CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
		 CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
		 CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
		 CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
		 CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
		 CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
		 CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
		 CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
		 CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
		 CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
		 CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
		 CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
		 CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
		 CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
		 CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
		 CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC) AS Kulike
		 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @UserViewCategoriesWithFilter  AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 0
				AND na.HideDefaultLocale = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@EditPermission = 1) OR ((@UserCanApprove = 1 OR na.Approved=1) AND (na.Active=1 OR na.UserID=@UserID)))
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@EditPermission = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
					AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
				))
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE na.PortalID=@PortalID
				AND na.HasPermissions = 1
				AND na.HideDefaultLocale = 0
				AND nt.TagID = @TagID
				AND na.PublishDate <= @CurrentDate AND na.ExpireDate >= @CurrentDate
				AND na.UserID = @FilterByDNNUserID
				AND ((@EditPermission = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
					AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				))
			)
		) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy =''PublishDate ASC'' THEN PublishDate END,
			CASE WHEN @OrderBy =''PublishDate DESC'' THEN PublishDate END DESC,
			CASE WHEN @OrderBy =''NumberOfViews ASC'' THEN NumberOfViews END,
			CASE WHEN @OrderBy =''NumberOfViews DESC'' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy =''RatingValue ASC'' THEN RatingValue END,
			CASE WHEN @OrderBy =''RatingValue DESC'' THEN RatingValue END DESC,
			CASE WHEN @OrderBy =''DateAdded ASC'' THEN DateAdded END,
			CASE WHEN @OrderBy =''DateAdded DESC'' THEN DateAdded END DESC,
			CASE WHEN @OrderBy =''ExpireDate ASC'' THEN ExpireDate END,
			CASE WHEN @OrderBy =''ExpireDate DESC'' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy =''LastModified ASC'' THEN LastModified END,
			CASE WHEN @OrderBy =''LastModified DESC'' THEN LastModified END DESC,
			CASE WHEN @OrderBy =''NumberOfComments ASC'' THEN NumberOfComments END,
			CASE WHEN @OrderBy =''NumberOfComments DESC'' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy =''Title ASC'' THEN Title END,
			CASE WHEN @OrderBy =''Title DESC'' THEN Title END DESC;
	END
END' 
END
GO


